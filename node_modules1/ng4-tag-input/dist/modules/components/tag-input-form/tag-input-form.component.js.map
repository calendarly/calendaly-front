{"version":3,"sources":["tag-input-form.component.ts"],"names":[],"mappings":"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","file":"tag-input-form.component.js","sourceRoot":"","sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer,\n    ViewChild\n} from '@angular/core';\n\nimport {\n    FormGroup,\n    FormControl,\n    Validators,\n    ValidatorFn,\n    AbstractControl\n} from '@angular/forms';\n\n\nexport class TagInputForm {\n    /**\n     * @name onSubmit\n     * @type {EventEmitter}\n     */\n     public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     * @type {EventEmitter}\n     */\n     public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     * @type {EventEmitter}\n     */\n     public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     * @type {EventEmitter}\n     */\n     public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     * @type {EventEmitter}\n     */\n     public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     * @type {string}\n     */\n     public placeholder: string;\n\n    /**\n     * @name validators\n     * @type {ValidatorFn[]}\n     */\n     public validators: ValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     * @type {string}\n     */\n     public inputId: string;\n\n    /**\n     * @name inputClass\n     * @type {string}\n     */\n     public inputClass: string;\n\n    /**\n     * @name inputText\n     */\n     public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name input\n     */\n     public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputTextChange\n     * @type {EventEmitter}\n     */\n     public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    constructor(private renderer: Renderer) {}\n\n    public ngOnInit() {\n        // creating form\n        this.form = new FormGroup({\n            item: new FormControl('', Validators.compose(this.validators))\n        });\n    }\n\n\t/**\n     * @name value\n     * @returns {AbstractControl}\n     */\n    public get value(): AbstractControl {\n        return this.form.get('item');\n    }\n\n\t/**\n     * @name isInputFocused\n     * @returns {boolean}\n     */\n    public isInputFocused(): boolean {\n        return document.activeElement === this.input.nativeElement;\n    }\n\n\t/**\n     * @name getErrorMessages\n     * @param messages\n     * @returns {string[]}\n     */\n    public getErrorMessages(messages): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     * @returns {boolean}\n     */\n    public hasErrors(): boolean {\n        return this.form.dirty &&\n            this.form.value.item &&\n            this.form.invalid;\n    }\n\n\t/**\n     * @name focus\n     */\n    public focus(): void {\n        this.renderer.invokeElementMethod(this.input.nativeElement, 'focus');\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.renderer.invokeElementMethod(this.input.nativeElement, 'blur');\n    }\n\n\t/**\n     * @name getElementPosition\n     * @returns {ClientRect}\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        this.renderer.invokeElementMethod(input.parentElement, 'removeChild', [input]);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        return this.onKeydown.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        this.onSubmit.emit($event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'tag-input-form',\n    styleUrls: [ './tag-input-form.style.scss' ],\n    templateUrl: './tag-input-form.template.html'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onSubmit': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'onFocus': [{ type: Output },],\n'onKeyup': [{ type: Output },],\n'onKeydown': [{ type: Output },],\n'placeholder': [{ type: Input },],\n'validators': [{ type: Input },],\n'inputId': [{ type: Input },],\n'inputClass': [{ type: Input },],\n'inputText': [{ type: Input },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n'inputTextChange': [{ type: Output },],\n};\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}