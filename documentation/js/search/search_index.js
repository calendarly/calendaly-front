var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,3.06,1,1.832]],["body/dependencies.html",[1,1.487,2,3.588,3,0.019,4,7.169,5,3.588,6,3.588,7,1.759,8,4.947,9,3.082,10,0.705,11,3.588,12,2.499,13,4.947,14,3.588,15,1.659,16,3.588,17,4.863,18,3.789,19,3.588,20,3.082,21,1.211,22,3.082,23,4.947,24,0.635,25,3.588,26,3.588,27,3.082,28,3.082,29,3.082,30,3.588,31,3.588,32,3.588,33,2.8,34,3.588,35,3.588,36,3.588,37,3.588,38,3.588,39,4.947,40,3.588,41,3.588,42,3.588,43,3.082,44,3.588,45,3.588,46,3.588,47,3.588,48,3.588,49,3.588,50,3.588,51,3.588,52,3.588,53,3.588,54,3.588,55,3.588,56,3.588,57,4.947,58,3.588,59,3.588,60,3.588,61,3.588,62,4.947,63,3.588,64,3.588,65,3.588,66,3.588,67,3.588,68,3.588,69,3.588,70,3.588,71,3.588,72,3.082,73,3.588,74,3.172,75,3.588,76,3.588,77,2.3,78,3.588,79,3.588,80,4.813,81,3.588,82,3.588,83,4.947,84,2.748,85,3.588,86,3.588,87,3.588,88,3.446,89,3.446,90,3.588,91,4.947,92,3.588,93,4.947,94,3.588,95,3.588,96,3.588,97,3.588,98,3.588,99,3.588,100,3.588,101,2.748,102,3.588,103,2.425,104,3.588,105,3.588,106,3.588,107,3.588,108,3.588,109,3.082,110,3.588,111,3.588,112,3.588,113,3.588,114,3.588,115,3.588,116,3.588,117,3.588,118,3.588,119,3.588,120,3.588,121,3.588,122,0.012,123,0.012]],["title/index.html",[124,3.06,125,3.06,126,0.295]],["body/index.html",[3,0.011,9,3.708,12,3.548,20,3.708,43,4.809,74,4.215,101,3.307,109,2.543,122,0.011,123,0.011,127,4.317,128,2.961,129,2.961,130,2.961,131,2.268,132,2.961,133,2.961,134,6.575,135,5.095,136,2.961,137,1.645,138,2.961,139,3.11,140,2.961,141,2.961,142,2.961,143,0.085,144,0.145,145,4.317,146,4.317,147,5.095,148,2.283,149,0.51,150,2.543,151,6.705,152,2.961,153,5.112,154,5.095,155,2.961,156,2.062,157,2.961,158,2.961,159,2.961,160,2.961,161,2.961,162,4.317,163,6.214,164,4.317,165,5.095,166,2.961,167,5.599,168,2.961,169,2.961,170,2.961,171,4.317,172,2.961,173,2.961,174,5.599,175,2.961,176,4.317,177,2.961,178,2.961,179,1.227,180,2.961,181,4.317,182,2.961,183,2.961,184,2.961,185,2.961,186,2.961,187,4.317,188,2.268,189,2.961,190,1.326,191,3.483,192,2.961,193,4.317,194,2.961,195,5.095,196,2.961,197,4.76,198,2.961,199,3.331,200,5.599,201,5.095,202,2.961,203,0.069,204,2.961,205,2.543,206,5.095,207,2.398,208,4.317,209,2.961,210,2.961,211,1.888,212,2.961,213,0.085,214,2.961,215,4.317,216,0.582,217,2.961,218,2.961,219,2.961,220,2.961,221,2.961,222,3.307,223,2.961,224,2.83,225,1.788,226,2.961,227,5.095,228,1.321,229,2.961,230,5.952,231,1.898,232,2.961,233,5.095,234,1.532,235,2.961,236,2.961,237,2.961,238,2.248,239,3.307,240,2.961,241,2.961,242,2.961,243,2.961,244,0.725,245,2.961,246,2.961,247,2.961,248,2.961,249,2.062,250,2.961,251,2.961,252,2.961,253,2.961,254,2.961,255,2.543,256,2.961,257,1.051,258,2.961,259,4.317,260,2.961,261,4.317,262,2.961,263,2.961,264,2.961,265,2.961,266,2.961,267,2.961,268,3.007,269,2.543,270,2.961,271,2.961,272,3.266,273,4.317,274,2.961,275,2.961,276,2.961,277,2.961,278,2.961,279,2.961,280,2.961]],["title/overview.html",[281,4.318]],["body/overview.html",[1,1.177,3,0.019,33,1.243,122,0.01,123,0.01,148,0.913,179,1.177,190,0.782,203,0.066,211,2.175,225,1.177,231,3.519,234,1.008,268,1.979,281,2.44,282,0.959,283,1.177,284,2.44,285,2.44,286,2.44,287,2.44,288,2.44,289,2.44,290,2.44,291,2.44,292,2.44,293,2.44,294,2.44,295,2.44,296,2.44,297,2.44,298,2.44,299,2.44,300,2.44,301,2.44,302,2.44,303,2.44,304,2.44,305,2.44,306,2.44,307,2.44,308,2.44,309,2.44,310,2.44,311,2.44,312,2.44,313,2.44,314,3.104,315,5.066,316,3.465,317,3.805,318,3.564,319,5.251,320,3.298,321,3.298,322,3.298,323,2.438,324,3.266,325,2.3,326,3.189,327,2.438,328,4.822,329,4.822,330,4.7,331,3.189,332,3.465,333,2.438,334,3.189,335,3.465,336,3.465,337,2.438,338,2.591,339,2.591,340,2.591,341,2.438,342,2.438,343,4.272,344,3.752,345,3.465,346,3.465,347,3.81,348,3.465,349,2.438,350,2.438,351,3.189,352,3.189,353,2.3,354,2.438,355,3.824,356,1.937,357,1.314,358,2.841,359,2.841,360,2.841,361,2.841,362,2.841,363,0.139,364,2.841,365,1.822]],["title/modules.html",[190,0.938]],["body/modules.html",[3,0.015,18,5.737,122,0.015,123,0.015,190,0.947,205,5.75,315,3.536,317,2.644,318,2.644,319,3.536,328,3.536,329,3.536,330,3.536,331,3.255,334,3.255,344,3.255,351,3.255,355,3.536,366,7.49,367,7.49,368,7.603,369,6.695]],["title/modules/AppModule.html",[190,0.685,315,2.558]],["body/modules/AppModule.html",[1,1.481,3,0.019,10,0.702,17,4.238,18,2.738,22,3.07,24,0.633,33,2.471,74,2.292,77,3.163,122,0.012,123,0.012,143,0.102,144,0.102,179,1.481,190,0.921,203,0.114,211,2.891,213,0.214,225,2.524,282,1.207,283,2.341,284,3.07,285,3.07,286,3.07,287,3.07,288,3.07,314,3.541,315,5.24,316,4.605,317,3.443,323,3.24,324,3.933,325,3.057,326,4.238,356,2.282,357,1.653,363,0.175,370,0.122,371,3.575,372,3.575,373,3.575,374,3.575,375,3.575,376,2.49,377,1.862,378,2.738,379,2.738,380,2.49,381,4.935,382,2.044,383,4.935,384,3.575,385,3.575,386,1.985,387,3.575,388,3.575,389,1.985,390,2.738,391,4.238,392,3.07,393,3.07,394,3.07,395,3.575,396,3.575,397,3.575,398,2.738,399,3.07,400,3.07,401,3.07]],["title/modules/CalendarModule.html",[190,0.685,328,2.558]],["body/modules/CalendarModule.html",[1,1.702,3,0.019,7,2.014,10,0.807,15,1.9,24,0.728,33,1.797,103,2.014,122,0.013,123,0.013,143,0.117,144,0.117,179,1.702,190,1.012,197,3.147,203,0.14,213,0.213,225,2.246,231,4.299,282,1.387,283,2.513,289,3.529,290,3.529,291,3.529,292,3.529,317,2.14,318,3.587,327,3.375,328,5.198,331,4.415,332,4.671,356,2.507,357,1.9,363,0.202,370,0.14,380,2.862,382,2.246,394,3.529,402,4.109,403,2.862,404,3.147,405,4.109,406,4.109,407,2.14,408,2.862,409,2.862,410,4.109,411,3.529,412,2.823,413,4.109,414,4.109,415,4.109,416,4.109]],["title/modules/CalendarRoutingModule.html",[190,0.685,331,2.354]],["body/modules/CalendarRoutingModule.html",[3,0.019,10,1.028,21,1.766,122,0.016,123,0.016,143,0.149,144,0.149,148,1.681,190,0.976,203,0.157,211,2.287,213,0.201,327,3.095,331,4.048,363,0.257,370,0.178,382,2.616,411,4.493,417,5.231,418,3.756,419,1.081,420,5.231,421,3.643,422,5.231]],["title/modules/CoreModule.html",[190,0.685,318,1.913]],["body/modules/CoreModule.html",[1,1.736,3,0.019,7,2.054,10,0.823,15,1.938,33,1.833,74,2.687,77,3.521,80,2.919,84,3.21,103,2.691,122,0.014,123,0.014,143,0.12,144,0.12,179,1.736,190,1.025,203,0.142,213,0.212,225,2.693,282,1.415,283,2.275,293,3.599,294,3.599,317,3.834,318,3.77,324,4.12,356,2.54,357,1.938,363,0.206,370,0.143,378,3.21,379,3.21,380,2.919,382,2.275,386,2.328,391,3.599,392,3.599,393,3.599,398,4.206,399,3.599,400,3.599,401,3.599,407,2.86,408,2.919,409,2.919,412,2.86,423,4.191,424,4.191,425,4.191,426,4.717,427,2.687,428,2.687,429,3.825,430,4.206,431,3.21,432,2.687,433,4.191]],["title/modules/KanbanModule.html",[190,0.685,329,2.558]],["body/modules/KanbanModule.html",[1,1.699,3,0.019,7,2.009,10,0.806,15,1.896,33,1.793,80,3.77,84,3.141,88,2.856,89,2.856,103,2.009,122,0.013,123,0.013,143,0.117,144,0.117,179,1.699,190,1.01,203,0.14,213,0.212,225,2.243,282,1.384,283,2.511,295,3.522,296,3.522,297,3.522,298,3.522,318,3.585,329,5.197,333,3.373,334,4.412,335,4.667,336,4.667,356,2.503,357,1.896,363,0.201,370,0.14,382,2.243,403,2.856,404,3.141,407,2.819,412,2.819,426,4.649,427,2.629,428,2.629,432,2.629,434,4.1,435,4.649,436,4.1,437,4.1,438,4.1,439,4.1,440,3.522,441,4.1]],["title/modules/KanbanRoutingModule.html",[190,0.685,334,2.354]],["body/modules/KanbanRoutingModule.html",[3,0.019,10,1.028,21,1.766,122,0.016,123,0.016,143,0.149,144,0.149,148,1.681,190,0.976,203,0.157,211,2.287,213,0.201,333,3.095,334,4.048,363,0.257,370,0.178,382,2.616,418,3.756,419,1.081,421,3.643,440,4.493,442,5.231,443,5.231,444,5.231]],["title/modules/LayoutModule.html",[190,0.685,319,2.558]],["body/modules/LayoutModule.html",[1,1.258,3,0.019,7,1.488,10,0.597,12,2.115,15,1.404,33,1.923,103,2.947,122,0.011,123,0.011,143,0.087,144,0.087,179,1.258,190,0.82,203,0.102,213,0.215,225,1.822,231,3.855,239,2.326,282,1.025,283,2.141,299,2.608,300,2.608,301,2.608,302,2.608,317,3.265,318,3.265,319,5.294,324,1.807,337,3.072,338,3.265,339,3.265,340,3.265,341,3.072,342,3.072,343,5.384,344,4.019,345,4.188,346,4.188,347,4.605,348,4.188,353,1.404,356,2.033,357,1.404,363,0.149,370,0.104,378,2.326,379,2.326,380,2.115,382,1.822,386,1.687,398,2.326,403,2.115,404,3.368,407,2.29,408,2.115,409,2.115,412,2.29,427,1.947,428,1.947,431,2.326,432,1.947,445,3.037,446,3.037,447,2.326,448,3.037,449,3.037,450,2.608,451,3.037,452,2.608,453,3.037,454,3.037,455,3.037,456,3.037,457,3.037,458,3.037,459,3.037,460,3.037,461,3.037,462,3.037,463,3.037,464,3.037,465,3.037,466,2.608,467,3.037,468,2.326,469,2.326,470,3.037,471,3.037,472,2.608,473,3.037,474,3.037]],["title/modules/PagesModule.html",[190,0.685,330,2.558]],["body/modules/PagesModule.html",[1,1.804,3,0.019,7,2.134,10,0.855,15,2.014,21,1.47,33,1.904,103,2.134,122,0.014,123,0.014,143,0.124,144,0.124,179,1.804,190,1.051,203,0.13,213,0.211,225,1.804,282,1.47,283,2.585,303,3.74,304,3.74,305,3.74,318,3.644,330,5.188,349,3.429,350,3.429,351,4.486,356,2.604,357,2.014,363,0.214,370,0.148,382,2.332,403,3.033,407,2.268,408,3.033,409,3.033,412,2.932,418,2.59,429,3.033,431,3.335,475,4.354,476,3.74,477,3.74,478,4.354,479,4.354]],["title/modules/PagesRoutingModule.html",[190,0.685,351,2.354]],["body/modules/PagesRoutingModule.html",[3,0.019,10,0.979,21,1.682,122,0.015,123,0.015,143,0.142,144,0.142,190,0.93,203,0.142,211,2.681,213,0.203,349,2.442,350,2.442,351,3.93,363,0.244,370,0.17,382,2.54,418,3.647,419,1.03,421,4.625,476,4.28,477,4.28,480,4.983,481,4.983,482,4.983,483,4.983,484,4.983,485,4.983,486,4.983,487,4.983]],["title/modules/PostModule.html",[190,0.685,317,1.913]],["body/modules/PostModule.html",[1,1.551,3,0.019,7,1.835,10,0.736,15,1.731,21,1.264,27,3.216,28,3.216,29,3.216,33,1.637,80,2.608,88,2.608,89,2.608,103,3.045,122,0.013,123,0.013,143,0.107,144,0.107,179,1.551,190,0.95,199,1.731,203,0.134,213,0.213,225,2.11,238,2.653,282,1.264,283,2.398,306,3.216,307,3.216,308,3.216,309,3.216,317,3.858,320,3.728,321,3.728,322,3.728,352,4.166,356,2.355,357,1.731,363,0.184,370,0.128,382,2.11,386,2.079,407,1.95,412,2.653,418,2.228,427,2.4,428,2.4,429,2.608,430,3.901,432,2.4,435,4.375,447,2.868,468,3.901,469,2.868,488,3.744,489,3.744,490,3.744,491,3.744,492,3.744,493,3.744,494,3.744,495,3.744,496,3.744,497,3.744,498,3.744,499,3.744,500,3.744,501,3.744,502,5.094,503,3.744,504,3.744,505,3.744,506,3.744,507,3.744]],["title/modules/ProfileModule.html",[190,0.685,344,2.354]],["body/modules/ProfileModule.html",[1,1.971,3,0.019,7,2.332,10,0.935,15,2.755,33,2.081,88,3.314,89,3.314,103,2.332,122,0.015,123,0.015,143,0.136,144,0.136,179,1.971,190,1.112,203,0.151,213,0.21,225,2.468,282,1.606,283,2.694,310,4.087,311,4.087,344,4.59,353,3.311,356,2.755,357,2.2,363,0.233,370,0.162,382,2.468,386,2.643,407,3.103,412,3.103,429,4.149,430,4.563,508,4.758,509,4.758,510,4.758]],["title/modules/TypeaheadComponentModule.html",[190,0.685,355,2.558]],["body/modules/TypeaheadComponentModule.html",[1,1.904,3,0.019,7,2.253,10,0.903,15,2.126,21,1.552,33,2.01,103,2.857,122,0.014,123,0.014,143,0.131,144,0.131,148,1.477,179,1.904,190,1.088,203,0.135,213,0.208,225,1.904,282,1.552,283,2.652,312,3.948,313,3.948,354,3.533,355,4.943,356,2.696,357,2.126,363,0.225,370,0.157,382,2.415,407,3.036,412,3.036,418,2.735,419,0.95,421,3.202,427,2.947,428,2.947,432,2.947,468,3.521,469,3.521,472,3.948,511,4.597,512,4.597,513,4.597,514,4.597]],["title/components/AddUserComponent.html",[148,1.18,342,1.8]],["body/components/AddUserComponent.html",[3,0.019,10,0.64,15,1.506,21,1.099,72,3.97,101,4.116,122,0.011,123,0.011,126,0.314,137,1.808,139,4.034,143,0.093,144,0.093,148,1.985,149,0.635,191,2.265,199,1.506,203,0.075,207,1.808,213,0.188,222,3.54,224,3.666,231,3.96,238,2.407,244,0.776,257,1.64,282,1.099,283,1.915,314,1.596,320,1.696,321,1.696,322,1.696,325,2.485,327,1.596,333,1.596,337,1.596,338,1.696,339,1.696,340,1.696,341,1.596,342,2.867,349,1.596,350,1.596,353,1.506,354,1.596,363,0.16,370,0.111,389,1.808,450,2.796,452,5.669,515,1.937,516,1.937,517,1.937,518,6.6,519,3.256,520,1.808,521,4.386,522,2.963,523,4.622,524,2.75,525,4.622,526,6.6,527,5.849,528,5.849,529,3.48,530,0.462,531,3.256,532,5.374,533,0.711,534,3.256,535,0.436,536,0.314,537,0.436,538,3.256,539,3.256,540,3.256,541,1.64,542,2.75,543,3.256,544,3.256,545,3.256,546,2.268,547,3.256,548,3.256,549,3.256,550,2.395,551,3.256,552,3.256,553,3.256,554,1.349,555,3.256,556,2.494,557,3.256,558,3.256,559,3.256,560,3.256,561,3.256,562,3.256,563,2.796,564,4.622,565,2.75,566,2.75,567,2.75,568,1.937,569,1.937,570,1.937,571,1.937,572,1.937,573,1.937,574,1.937,575,1.937,576,1.937,577,1.937,578,1.937,579,1.937,580,1.937,581,1.937,582,1.937,583,1.937,584,1.937,585,1.937]],["title/components/AppComponent.html",[148,1.18,314,1.8]],["body/components/AppComponent.html",[3,0.019,10,0.598,21,1.486,74,1.95,77,1.95,122,0.011,123,0.011,126,0.293,137,1.689,139,4.039,143,0.087,144,0.087,148,1.933,149,0.612,179,1.26,191,2.157,199,1.407,203,0.07,207,1.689,213,0.189,216,1.016,224,1.689,238,2.293,244,0.739,257,1.562,272,2.822,282,1.027,283,1.26,314,2.779,320,1.584,321,1.584,322,1.584,323,3.074,325,2.392,326,3.635,327,1.491,333,1.491,337,1.491,338,1.584,339,1.584,340,1.584,341,1.491,342,1.491,349,1.491,350,1.491,353,1.407,354,1.491,363,0.149,370,0.104,377,1.584,389,1.689,390,2.33,515,1.81,516,1.81,517,1.81,520,1.689,521,4.347,522,1.95,524,2.619,529,3.373,530,0.432,533,0.717,535,0.407,536,0.424,537,0.407,541,1.836,542,3.078,546,3.949,550,2.246,554,1.26,565,2.619,566,2.619,567,2.619,568,1.81,569,1.81,570,1.81,571,1.81,572,1.81,573,1.81,574,1.81,575,1.81,576,1.81,577,1.81,578,1.81,579,1.81,580,1.81,581,1.81,582,1.81,583,1.81,584,1.81,585,1.81,586,3.042,587,4.402,588,3.042,589,4.402,590,5.173,591,6.469,592,5.67,593,5.67,594,5.67,595,2.613,596,4.402,597,3.042,598,3.042,599,3.042,600,1.016,601,3.042,602,3.042,603,3.042,604,3.042,605,3.042,606,1.407,607,3.042,608,3.042,609,3.042,610,3.042,611,2.613,612,2.33,613,2.613,614,1.95,615,3.042,616,3.042,617,3.042,618,4.402,619,4.402,620,3.042,621,3.042,622,3.042,623,3.042,624,3.042,625,3.042,626,3.042,627,3.042,628,3.042,629,3.042,630,3.042,631,3.042,632,3.042,633,3.042,634,3.042]],["title/components/LayoutComponent.html",[148,1.18,337,1.8]],["body/components/LayoutComponent.html",[3,0.019,10,0.665,12,3.308,21,1.142,122,0.012,123,0.012,126,0.326,137,1.879,139,4.057,143,0.097,144,0.097,148,2.014,149,0.649,191,2.328,199,1.565,203,0.078,207,1.879,211,2.077,213,0.17,216,0.665,224,1.879,238,2.474,244,0.797,257,1.685,272,3.518,282,1.142,314,1.658,320,1.762,321,1.762,322,1.762,323,3.071,325,2.538,327,1.658,333,1.658,337,2.916,338,1.762,339,1.762,340,1.762,341,1.658,342,1.658,349,1.658,350,1.658,353,1.565,354,1.658,363,0.166,370,0.115,377,1.762,389,1.879,515,2.013,516,2.013,517,2.013,520,1.879,521,4.406,522,2.169,524,2.825,529,3.54,530,0.48,533,0.694,535,0.453,536,0.458,537,0.453,541,1.685,542,2.825,546,4.365,550,2.221,554,1.402,565,2.825,566,2.825,567,2.825,568,2.013,569,2.013,570,2.013,571,2.013,572,2.013,573,2.013,574,2.013,575,2.013,576,2.013,577,2.013,578,2.013,579,2.013,580,2.013,581,2.013,582,2.013,583,2.013,584,2.013,585,2.013,600,0.933,613,2.906,614,2.169,635,3.384,636,0.714,637,3.822,638,3.384,639,4.749,640,5.95,641,5.95,642,5.95,643,2.592,644,5.488,645,4.749,646,3.384,647,3.384,648,3.384,649,4.749,650,3.384,651,3.384,652,2.169,653,3.384,654,3.384,655,3.384,656,3.384,657,3.384,658,3.384]],["title/components/NavigationTriggerComponent.html",[148,1.18,341,1.8]],["body/components/NavigationTriggerComponent.html",[3,0.019,10,0.702,122,0.012,123,0.012,126,0.345,137,3.763,139,4.041,143,0.102,144,0.102,148,2.054,149,0.668,199,1.653,203,0.083,207,1.985,213,0.141,224,1.985,238,2.57,244,0.828,257,1.751,282,1.207,314,1.752,320,1.862,321,1.862,322,1.862,323,3.24,327,1.752,333,1.752,337,1.752,338,1.862,339,1.862,340,1.862,341,2.986,342,1.752,349,1.752,350,1.752,353,1.653,354,1.752,363,0.175,370,0.122,377,1.862,466,5.492,515,2.127,516,2.127,517,2.127,520,1.985,521,4.435,522,3.163,524,2.936,529,3.625,530,0.507,533,0.675,535,0.478,536,0.476,537,0.478,541,1.751,542,2.936,550,2.275,554,1.481,565,2.936,566,2.936,567,2.936,568,2.127,569,2.127,570,2.127,571,2.127,572,2.127,573,2.127,574,2.127,575,2.127,576,2.127,577,2.127,578,2.127,579,2.127,580,2.127,581,2.127,582,2.127,583,2.127,584,2.127,585,2.127,600,0.702,636,0.742,637,3.936,643,2.738,659,6.394,660,3.575,661,4.935,662,4.935,663,4.935,664,6.093,665,6.093,666,4.935,667,3.575,668,3.575,669,4.854,670,3.575,671,3.575,672,3.575]],["title/components/ProfileComponent.html",[148,1.18,353,1.698]],["body/components/ProfileComponent.html",[3,0.019,10,0.644,24,0.58,122,0.012,123,0.012,126,0.316,131,3.558,137,1.821,139,3.985,143,0.094,144,0.094,148,1.99,149,0.638,156,4.314,191,2.276,199,1.516,203,0.076,207,1.821,213,0.184,216,0.912,222,4.494,224,1.821,238,2.419,244,0.78,249,4.087,257,1.648,282,1.107,314,1.607,320,1.707,321,1.707,322,1.707,325,2.494,326,3.761,327,1.607,333,1.607,337,1.607,338,1.707,339,1.707,340,1.707,341,1.607,342,1.607,349,1.607,350,1.607,353,2.713,354,1.607,363,0.161,370,0.112,376,2.283,389,1.821,390,2.511,515,1.95,516,1.95,517,1.95,520,1.821,521,4.389,524,2.763,529,3.491,530,0.465,533,0.713,535,0.439,536,0.448,537,0.439,541,1.648,542,2.763,550,2.19,554,1.358,565,2.763,566,2.763,567,2.763,568,1.95,569,1.95,570,1.95,571,1.95,572,1.95,573,1.95,574,1.95,575,1.95,576,1.95,577,1.95,578,1.95,579,1.95,580,1.95,581,1.95,582,1.95,583,1.95,584,1.95,585,1.95,595,2.816,600,0.912,611,2.816,614,2.102,636,0.698,637,3.757,652,2.102,673,3.278,674,4.645,675,4.645,676,5.394,677,3.056,678,4.645,679,3.278,680,3.278,681,3.278,682,3.278,683,3.278,684,2.816,685,2.816,686,2.102,687,3.278,688,2.511,689,3.278,690,3.278,691,3.278,692,3.278,693,4.645,694,4.645,695,3.989,696,3.989,697,3.989,698,4.645,699,4.645,700,4.645]],["title/components/TypeaheadComponent.html",[148,1.18,354,1.8]],["body/components/TypeaheadComponent.html",[3,0.018,10,0.574,122,0.011,123,0.011,126,0.282,131,3.273,137,1.622,139,3.966,143,0.083,144,0.083,148,1.902,149,0.505,150,5.625,153,3.67,188,3.273,199,1.35,203,0.068,207,1.622,213,0.083,216,0.574,224,1.622,225,1.77,238,2.226,244,0.717,257,1.516,272,3.566,282,0.986,314,1.431,320,1.521,321,1.521,322,1.521,327,1.431,333,1.431,337,1.431,338,1.521,339,1.521,340,1.521,341,1.431,342,1.431,349,1.431,350,1.431,353,1.35,354,2.726,363,0.143,370,0.1,515,1.737,516,1.737,517,1.737,520,1.622,521,4.323,522,2.739,524,2.542,529,3.309,530,0.717,533,0.616,536,0.412,541,1.036,542,1.737,550,2.076,565,2.542,566,2.542,567,2.542,568,1.737,569,1.737,570,1.737,571,1.737,572,1.737,573,1.737,574,1.737,575,1.737,576,1.737,577,1.737,578,1.737,579,1.737,580,1.737,581,1.737,582,1.737,583,1.737,584,3.8,585,1.737,600,0.574,606,2.337,636,0.642,637,3.52,695,3.67,696,3.67,697,3.67,701,2.92,702,4.273,703,4.273,704,5.919,705,4.273,706,2.92,707,2.92,708,4.273,709,4.273,710,4.273,711,4.273,712,4.273,713,4.273,714,4.273,715,4.273,716,4.273,717,4.273,718,4.273,719,4.273,720,4.273,721,4.273,722,4.273,723,4.273,724,4.273,725,4.273,726,4.273,727,4.273,728,4.273,729,4.273,730,4.273,731,4.273,732,4.273,733,4.273,734,4.273,735,4.273,736,4.273,737,4.273,738,4.273,739,5.562,740,5.562,741,5.562,742,4.273,743,4.273,744,4.273,745,4.273,746,4.273,747,4.273,748,5.562,749,4.273,750,4.273,751,4.273,752,4.273,753,5.562,754,4.273,755,4.273,756,4.273,757,4.273,758,2.92,759,2.92,760,4.273,761,4.273,762,4.273,763,4.273,764,4.273,765,4.273,766,4.273]],["title/injectables/AuthGuard.html",[234,1.303,346,2.558]],["body/injectables/AuthGuard.html",[3,0.019,10,0.871,21,1.497,122,0.014,123,0.014,126,0.428,143,0.127,144,0.127,149,0.674,191,2.174,203,0.103,213,0.196,234,2.234,257,2.022,325,2.911,346,3.969,347,5.263,363,0.218,370,0.151,530,0.63,533,0.631,535,0.762,536,0.549,537,0.762,541,2.022,554,1.838,556,3.398,563,3.81,606,2.911,636,0.667,669,4.894,767,4.436,768,4.405,769,3.81,770,4.436,771,4.436,772,4.259,773,4.259,774,4.436,775,4.894,776,3.745,777,5.698,778,4.436,779,3.81,780,2.639,781,4.436,782,4.436,783,4.436,784,4.436,785,4.436,786,5.698,787,4.436,788,4.436,789,4.436]],["title/injectables/CalendarResolveGuard.html",[234,1.303,332,2.558]],["body/injectables/CalendarResolveGuard.html",[3,0.019,10,0.892,21,1.533,122,0.014,123,0.014,126,0.438,143,0.13,144,0.13,149,0.684,203,0.105,211,1.986,213,0.198,234,2.259,257,2.053,332,4.029,352,4.296,363,0.223,370,0.155,530,0.645,533,0.641,535,0.774,536,0.558,537,0.774,541,2.259,550,1.695,554,1.882,606,2.944,636,0.683,768,2.912,772,4.296,773,4.296,776,3.987,780,2.702,790,6.365,791,3.164,792,4.668,793,3.479,794,4.542,795,4.029,796,4.542,797,3.479,798,3.164,799,3.164,800,4.542,801,3.901,802,3.901,803,3.901,804,4.542,805,4.542,806,4.542]],["title/injectables/KanbanResolveGuard.html",[234,1.303,336,2.558]],["body/injectables/KanbanResolveGuard.html",[3,0.019,10,0.802,21,1.378,24,0.723,122,0.013,123,0.013,126,0.394,143,0.117,144,0.117,149,0.638,156,4.661,191,2.645,203,0.094,211,1.785,213,0.208,234,2.146,257,1.915,323,3.153,325,2.797,336,3.76,363,0.2,370,0.139,376,2.844,377,2.126,389,2.267,530,0.579,533,0.598,535,0.722,536,0.521,537,0.722,541,2.146,550,2.257,554,1.691,606,2.797,612,3.127,614,2.617,636,0.614,643,3.127,652,2.617,686,2.617,688,3.127,768,2.617,772,4.125,773,4.125,776,3.828,780,2.429,791,2.844,792,4.482,795,3.76,798,2.844,799,2.844,807,6.047,808,3.506,809,3.506,810,1.19,811,3.506,812,3.506,813,4.083,814,4.083,815,4.083,816,4.083,817,4.083,818,4.083,819,4.083,820,3.127,821,3.506,822,3.506,823,3.506,824,3.506,825,3.506,826,3.506,827,4.083]],["title/injectables/KanbanService.html",[234,1.303,335,2.558]],["body/injectables/KanbanService.html",[3,0.019,10,0.933,77,3.043,122,0.015,123,0.015,126,0.458,143,0.136,144,0.136,149,0.703,203,0.11,213,0.2,234,2.305,249,4.143,257,2.111,323,3.437,335,4.143,363,0.233,370,0.162,377,2.472,386,2.636,530,0.674,533,0.659,535,0.796,536,0.458,537,0.796,541,2.111,554,1.966,652,3.043,684,4.077,685,4.077,812,4.077,828,4.747,829,5.948,830,4.747,831,6.496,832,4.747,833,4.747,834,4.747,835,4.077,836,4.747,837,4.747,838,4.077,839,4.747,840,4.747,841,4.747]],["title/injectables/LayoutResolveGuard.html",[234,1.303,345,2.558]],["body/injectables/LayoutResolveGuard.html",[3,0.019,10,0.784,21,1.346,24,0.706,122,0.013,123,0.013,126,0.385,143,0.114,144,0.114,149,0.628,156,4.625,191,2.605,203,0.092,211,1.744,213,0.207,234,2.121,257,1.886,323,3.254,325,2.764,345,3.702,352,4.087,363,0.196,370,0.136,376,2.778,377,2.077,389,2.215,530,0.566,533,0.589,535,0.711,536,0.512,537,0.711,541,2.121,550,2.231,554,1.652,606,2.764,612,3.055,614,2.557,636,0.599,652,2.557,686,2.557,688,3.055,768,2.557,772,4.087,773,4.087,776,3.793,780,2.373,791,2.778,792,4.44,793,3.055,795,3.702,797,3.055,798,2.778,799,2.778,801,3.425,802,3.425,803,3.425,808,3.425,809,3.425,810,1.162,811,3.425,820,3.055,821,3.425,822,3.425,823,3.425,824,3.425,825,4.565,826,3.425,842,5.978,843,3.425,844,3.988,845,3.988,846,3.988,847,3.988,848,3.988,849,3.988,850,3.988]],["title/injectables/PostViewResolveGuard.html",[234,1.303,348,2.558]],["body/injectables/PostViewResolveGuard.html",[3,0.019,10,0.806,21,1.384,122,0.013,123,0.013,126,0.395,143,0.117,144,0.117,149,0.64,199,1.896,203,0.095,211,1.793,213,0.197,234,2.15,239,4.642,249,2.856,255,3.522,257,1.921,323,3.284,348,3.77,352,4.132,363,0.201,370,0.14,377,2.135,447,4.642,530,0.582,533,0.6,535,0.724,536,0.522,537,0.724,541,2.442,550,2.501,554,1.699,606,2.803,636,0.616,768,2.629,772,4.132,773,4.132,776,3.835,780,2.439,791,2.856,792,4.489,793,3.141,795,3.77,797,3.141,798,2.856,799,2.856,838,3.522,843,3.522,851,6.06,852,4.1,853,4.1,854,4.1,855,4.1,856,4.1,857,4.1,858,4.1,859,4.1,860,4.1,861,4.1,862,4.1,863,4.1,864,4.1,865,4.1,866,4.1,867,4.1,868,4.1,869,4.1,870,4.1,871,4.1,872,4.1,873,4.1]],["title/interceptors/AuthInterceptor.html",[324,2.185,874,3.154]],["body/interceptors/AuthInterceptor.html",[3,0.019,10,0.855,21,1.47,122,0.014,123,0.014,126,0.42,143,0.124,144,0.124,149,0.666,191,2.134,203,0.101,213,0.203,234,1.998,257,1.998,324,3.35,325,2.885,326,2.791,363,0.214,370,0.148,386,2.418,530,0.618,533,0.624,535,0.753,536,0.543,537,0.753,541,1.998,546,4.758,550,1.625,554,1.804,556,3.335,636,0.655,769,3.74,775,5.359,776,2.59,779,3.74,780,2.59,874,3.74,875,6.24,876,4.354,877,5.63,878,4.354,879,5.63,880,6.597,881,6.597,882,4.354,883,4.354,884,4.354,885,4.354,886,5.63,887,4.354,888,4.354,889,5.63,890,5.63,891,4.354,892,4.354,893,4.354,894,4.354,895,4.354,896,4.354,897,4.354,898,4.354,899,4.354,900,4.354]],["title/pipes/ContinuePipe.html",[268,2.558,316,2.558]],["body/pipes/ContinuePipe.html",[3,0.019,10,0.997,122,0.015,123,0.015,143,0.145,144,0.145,149,0.792,203,0.117,213,0.145,257,1.801,268,4.663,269,5.326,272,4.292,316,4.319,363,0.249,370,0.173,520,2.82,533,0.562,535,0.679,536,0.49,537,0.679,541,2.2,550,1.895,600,0.997,636,0.763,901,5.077,902,5.077,903,6.201,904,6.695,905,5.077,906,5.077,907,6.201,908,5.077,909,5.077,910,5.077,911,5.077,912,5.077]],["title/classes/AddPost.html",[363,0.18,913,2.813]],["body/classes/AddPost.html",[3,0.019,24,0.729,122,0.013,123,0.013,126,0.397,143,0.118,144,0.118,149,0.487,203,0.172,213,0.118,216,0.809,244,0.911,363,0.345,370,0.14,419,1.424,530,0.585,533,0.673,535,0.551,536,0.623,537,0.551,600,0.809,636,1.056,913,4.158,914,4.945,915,3.537,916,1.711,917,1.507,918,1.926,919,1.886,920,1.143,921,5.429,922,4.118,923,4.118,924,4.118,925,1.39,926,1.39,927,1.39,928,1.39,929,1.39,930,4.118,931,1.822,932,1.661,933,4.118,934,1.661,935,4.118,936,1.661,937,1.39,938,1.661,939,1.39,940,1.661,941,1.39,942,4.118]],["title/classes/AuthenticateUser.html",[363,0.18,943,2.04]],["body/classes/AuthenticateUser.html",[3,0.019,24,0.757,122,0.014,123,0.014,126,0.412,143,0.122,144,0.122,149,0.506,203,0.171,213,0.122,216,0.84,244,0.934,363,0.341,370,0.146,419,1.404,530,0.607,533,0.685,535,0.572,536,0.632,537,0.572,600,0.84,636,1.047,677,2.898,916,1.701,917,1.545,918,1.922,919,1.875,920,1.187,931,1.796,943,3.435,944,2.544,945,5.564,946,4.276,947,4.276,948,2.741,949,2.741,950,2.741,951,2.741,952,2.741,953,2.741,954,3.09,955,2.741,956,3.09,957,2.741,958,2.741,959,3.09,960,2.741,961,2.544]],["title/classes/CreatePost.html",[228,1.124,363,0.18]],["body/classes/CreatePost.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.529,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,963,4.212,964,2.863,965,1.955,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016]],["title/classes/CreatePostSuccess.html",[363,0.18,990,1.18]],["body/classes/CreatePostSuccess.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.955,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.605,991,1.353,992,1.016,993,1.016,994,1.016,995,4.212,996,2.863]],["title/classes/CreateTopic.html",[363,0.18,982,1.18]],["body/classes/CreateTopic.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.605,983,1.494,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,997,4.212,998,2.863]],["title/classes/CreateTopicSuccess.html",[363,0.18,984,1.18]],["body/classes/CreateTopicSuccess.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.605,985,1.494,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,999,4.212,1000,2.863]],["title/classes/DeletePost.html",[363,0.18,932,1.124]],["body/classes/DeletePost.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.529,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.494,994,1.016,1001,4.212,1002,2.863]],["title/classes/DeletePostSuccess.html",[363,0.18,991,1.18]],["body/classes/DeletePostSuccess.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.605,992,1.494,993,1.016,994,1.016,1003,4.212,1004,2.863]],["title/classes/DragPost.html",[363,0.18,934,1.124]],["body/classes/DragPost.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.686,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.494,1005,4.212,1006,2.863]],["title/classes/DragPostSuccess.html",[363,0.18,936,1.124]],["body/classes/DragPostSuccess.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.529,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1007,4.212,1008,2.863,1009,2.863]],["title/classes/ForgotPassword.html",[363,0.18,956,2.04]],["body/classes/ForgotPassword.html",[3,0.019,24,0.757,122,0.014,123,0.014,126,0.412,143,0.122,144,0.122,149,0.506,203,0.171,213,0.122,216,0.84,244,0.934,363,0.341,370,0.146,419,1.404,530,0.607,533,0.685,535,0.572,536,0.632,537,0.572,600,0.84,636,1.047,677,2.898,916,1.701,917,1.545,918,1.922,919,1.875,920,1.187,931,1.796,943,3.09,944,2.544,948,2.741,949,2.741,950,2.741,951,2.741,952,2.741,953,2.741,954,3.09,955,2.741,956,3.435,957,2.741,958,2.741,959,3.09,960,2.741,961,2.544,1010,5.564,1011,4.276,1012,4.276]],["title/classes/GetPosts.html",[363,0.18,976,1.18]],["body/classes/GetPosts.html",[3,0.019,24,0.52,122,0.011,123,0.011,126,0.283,143,0.084,144,0.084,203,0.175,213,0.084,216,0.577,228,1.313,244,0.721,363,0.353,370,0.1,419,1.487,533,0.325,536,0.694,600,0.577,636,1.081,810,0.856,916,1.736,918,1.89,919,1.914,925,0.992,926,0.992,927,0.992,928,0.992,929,0.992,931,1.89,932,1.313,934,1.552,936,1.313,937,0.992,938,1.313,939,0.992,940,1.313,941,0.992,962,0.992,965,1.8,966,1.523,967,1.8,968,1.043,969,1.043,970,1.043,971,1.043,972,1.043,973,1.043,974,1.043,975,1.043,976,1.63,977,1.523,978,1.379,979,1.043,980,1.379,981,1.043,982,1.379,983,1.043,984,1.379,985,1.043,986,1.379,987,1.043,988,1.379,989,1.043,990,1.379,991,1.379,992,1.043,993,1.043,994,1.043,1013,2.938]],["title/classes/GetPostsError.html",[363,0.18,986,1.18]],["body/classes/GetPostsError.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.605,987,1.494,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1014,4.212,1015,2.863]],["title/classes/GetPostsSuccess.html",[363,0.18,978,1.18]],["body/classes/GetPostsSuccess.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.605,979,1.494,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1016,4.212,1017,2.863]],["title/classes/SetCurrentPost.html",[363,0.18,938,1.124]],["body/classes/SetCurrentPost.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.529,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1018,4.212,1019,2.863,1020,2.863]],["title/classes/SetCurrentStatus.html",[363,0.18,940,1.124]],["body/classes/SetCurrentStatus.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.529,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1021,4.212,1022,2.863,1023,2.863]],["title/classes/SetPosts.html",[363,0.18,988,1.18]],["body/classes/SetPosts.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.353,981,1.016,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.605,989,1.494,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1024,4.212,1025,2.863]],["title/classes/SetStatuses.html",[363,0.18,980,1.18]],["body/classes/SetStatuses.html",[3,0.019,24,0.507,122,0.01,123,0.01,126,0.276,143,0.082,144,0.082,149,0.339,203,0.175,213,0.082,216,0.562,228,1.289,244,0.707,363,0.351,370,0.098,419,1.481,530,0.406,533,0.553,535,0.383,536,0.691,537,0.383,600,0.562,636,1.077,810,0.834,916,1.729,917,1.169,918,1.925,919,1.906,920,0.795,925,0.966,926,0.966,927,0.966,928,0.966,929,0.966,931,1.882,932,1.289,934,1.529,936,1.289,937,0.966,938,1.289,939,0.966,940,1.289,941,0.966,962,0.966,965,1.773,966,1.494,967,1.773,968,1.016,969,1.016,970,1.016,971,1.016,972,1.016,973,1.016,974,1.016,975,1.016,976,1.353,977,1.016,978,1.353,979,1.016,980,1.605,981,1.494,982,1.353,983,1.016,984,1.353,985,1.016,986,1.353,987,1.016,988,1.353,989,1.016,990,1.353,991,1.353,992,1.016,993,1.016,994,1.016,1026,4.212,1027,2.863]],["title/classes/SetToken.html",[363,0.18,959,2.04]],["body/classes/SetToken.html",[3,0.019,24,0.757,122,0.014,123,0.014,126,0.412,143,0.122,144,0.122,149,0.506,203,0.171,213,0.122,216,0.84,244,0.934,363,0.341,370,0.146,419,1.404,530,0.607,533,0.685,535,0.572,536,0.632,537,0.572,600,0.84,636,1.047,677,2.898,916,1.701,917,1.545,918,1.922,919,1.875,920,1.187,931,1.796,943,3.09,944,2.544,948,2.741,949,2.741,950,2.741,951,2.741,952,2.741,953,2.741,954,3.09,955,2.741,956,3.09,957,2.741,958,2.741,959,3.435,960,2.741,961,2.544,1028,5.564,1029,4.276,1030,4.276]],["title/classes/SignOutUser.html",[363,0.18,954,2.04]],["body/classes/SignOutUser.html",[3,0.019,24,0.757,122,0.014,123,0.014,126,0.412,143,0.122,144,0.122,149,0.506,203,0.171,213,0.122,216,0.84,244,0.934,363,0.341,370,0.146,419,1.404,530,0.607,533,0.685,535,0.572,536,0.632,537,0.572,600,0.84,636,1.047,677,2.898,916,1.701,917,1.545,918,1.922,919,1.875,920,1.187,931,1.796,943,3.09,944,2.544,948,2.741,949,2.741,950,2.741,951,2.741,952,2.741,953,2.741,954,3.435,955,2.741,956,3.09,957,2.741,958,2.741,959,3.09,960,2.741,961,2.544,1031,5.564,1032,4.276,1033,4.276]],["title/classes/UserUpdated.html",[363,0.18,677,1.913]],["body/classes/UserUpdated.html",[3,0.019,24,0.757,122,0.014,123,0.014,126,0.412,143,0.122,144,0.122,149,0.506,203,0.171,213,0.122,216,0.84,244,0.934,363,0.341,370,0.146,419,1.404,530,0.607,533,0.685,535,0.572,536,0.632,537,0.572,600,0.84,636,1.047,677,3.221,916,1.701,917,1.545,918,1.922,919,1.875,920,1.187,931,1.796,943,3.09,944,2.544,948,2.741,949,2.741,950,2.741,951,2.741,952,2.741,953,2.741,954,3.09,955,2.741,956,3.09,957,2.741,958,2.741,959,3.09,960,2.741,961,2.544,1034,5.564,1035,4.276,1036,4.276]],["title/interfaces/AppState.html",[365,2.354,686,2.354]],["body/interfaces/AppState.html",[3,0.019,24,0.914,122,0.016,123,0.016,126,0.498,143,0.147,144,0.147,188,5.164,197,5.164,203,0.145,213,0.193,244,1.051,365,4.014,370,0.176,533,0.694,536,0.604,550,1.926,686,4.014,1037,5.16,1038,6.262,1039,5.16,1040,6.262,1041,5.16,1042,4.432,1043,5.16,1044,4.432,1045,4.432,1046,5.16,1047,5.16,1048,5.16,1049,5.16,1050,5.16,1051,5.16]],["title/interfaces/State.html",[365,2.354,606,1.698]],["body/interfaces/State.html",[3,0.019,24,0.646,122,0.012,123,0.012,126,0.483,143,0.104,144,0.104,199,3.326,203,0.149,213,0.143,216,0.717,244,0.84,365,3.663,370,0.124,419,1.035,533,0.714,536,0.621,541,2.418,550,2.59,606,3.209,810,1.064,820,2.796,835,3.135,916,0.876,1044,3.135,1052,3.135,1053,6.442,1054,5.714,1055,5.714,1056,6.148,1057,3.651,1058,3.651,1059,3.651,1060,3.651,1061,3.651,1062,3.651,1063,3.651,1064,3.651,1065,3.651,1066,3.651,1067,3.651,1068,5.006,1069,3.651,1070,3.651,1071,3.651,1072,3.651,1073,2.796,1074,3.135,1075,3.651,1076,3.651,1077,3.651,1078,6.654,1079,3.651,1080,5.006,1081,3.651,1082,3.651,1083,3.651,1084,5.006,1085,3.651,1086,3.651,1087,3.651,1088,3.651,1089,5.714,1090,3.651,1091,3.651,1092,5.006,1093,3.651,1094,3.651,1095,3.651,1096,3.651,1097,3.651,1098,3.651,1099,3.651,1100,3.651,1101,3.651,1102,3.651,1103,3.651,1104,3.651,1105,3.651,1106,3.651,1107,3.651]],["title/miscellaneous/functions.html",[1073,3.386,1108,2.131]],["body/miscellaneous/functions.html",[3,0.019,122,0.016,123,0.016,126,0.502,149,0.8,535,0.905,536,0.652,537,0.905,606,3.129,914,3.984,916,1.755,1042,5.405,1045,5.405,1052,4.468,1073,3.984,1074,4.468,1108,3.623,1109,6.293,1110,7.316,1111,5.202,1112,5.202,1113,5.202,1114,5.202]],["title/miscellaneous/typealiases.html",[1108,2.131,1115,4.421]],["body/miscellaneous/typealiases.html",[3,0.019,122,0.015,123,0.015,126,0.477,228,1.513,536,0.477,677,2.575,810,1.928,913,3.787,914,3.787,915,4.247,932,1.867,934,2.025,936,1.867,938,1.867,940,1.867,943,2.746,944,2.942,954,2.746,956,2.746,959,2.746,961,3.937,962,1.669,976,1.589,978,1.589,980,1.589,982,1.589,984,1.589,986,1.589,988,1.589,990,1.589,991,1.589,1108,3.444,1116,4.944,1117,6.617]]],"invertedIndex":[["",{"_index":3,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["0.0.6",{"_index":87,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":90,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":79,"title":{},"body":{"dependencies.html":{}}}],["0.7.1",{"_index":42,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":55,"title":{},"body":{"dependencies.html":{}}}],["0.8.14",{"_index":121,"title":{},"body":{"dependencies.html":{}}}],["0.8.9",{"_index":113,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":361,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":94,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":76,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":102,"title":{},"body":{"dependencies.html":{}}}],["1.12.5",{"_index":108,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":105,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":83,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":85,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":67,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":92,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":106,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":358,"title":{},"body":{"overview.html":{}}}],["13",{"_index":360,"title":{},"body":{"overview.html":{}}}],["16",{"_index":359,"title":{},"body":{"overview.html":{}}}],["2",{"_index":237,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":13,"title":{},"body":{"dependencies.html":{}}}],["2.1.7",{"_index":51,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":71,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":73,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":65,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":119,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["2.9.4",{"_index":117,"title":{},"body":{"dependencies.html":{}}}],["26",{"_index":362,"title":{},"body":{"overview.html":{}}}],["3.2.1",{"_index":63,"title":{},"body":{"dependencies.html":{}}}],["3.5.2",{"_index":32,"title":{},"body":{"dependencies.html":{}}}],["3.8.0",{"_index":61,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":364,"title":{},"body":{"overview.html":{}}}],["4,value.length",{"_index":911,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["4.0.0",{"_index":34,"title":{},"body":{"dependencies.html":{}}}],["4.0.4",{"_index":111,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":98,"title":{},"body":{"dependencies.html":{}}}],["4.16.2",{"_index":53,"title":{},"body":{"dependencies.html":{}}}],["4.17.37",{"_index":40,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":59,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":26,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":23,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":47,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":4,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":110,"title":{},"body":{"dependencies.html":{}}}],["7.7.0",{"_index":115,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":30,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":551,"title":{},"body":{"components/AddUserComponent.html":{}}}],["action",{"_index":916,"title":{},"body":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["action.payload",{"_index":1089,"title":{},"body":{"interfaces/State.html":{}}}],["action.typ",{"_index":1077,"title":{},"body":{"interfaces/State.html":{}}}],["actionreducermap",{"_index":1044,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["actions.t",{"_index":915,"title":{},"body":{"classes/AddPost.html":{},"miscellaneous/typealiases.html":{}}}],["actions.ts:11",{"_index":921,"title":{},"body":{"classes/AddPost.html":{}}}],["actions.ts:12",{"_index":922,"title":{},"body":{"classes/AddPost.html":{}}}],["activatedrout",{"_index":644,"title":{},"body":{"components/LayoutComponent.html":{}}}],["activatedroutesnapshot",{"_index":772,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["actual_compon",{"_index":585,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["ad",{"_index":229,"title":{},"body":{"index.html":{}}}],["add",{"_index":224,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["add_post",{"_index":923,"title":{},"body":{"classes/AddPost.html":{}}}],["add_post='add_post",{"_index":924,"title":{},"body":{"classes/AddPost.html":{}}}],["add_posts_to_stor",{"_index":966,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["addmemb",{"_index":528,"title":{},"body":{"components/AddUserComponent.html":{}}}],["addpost",{"_index":913,"title":{"classes/AddPost.html":{}},"body":{"classes/AddPost.html":{},"miscellaneous/typealiases.html":{}}}],["addusercompon",{"_index":342,"title":{"components/AddUserComponent.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["alabama",{"_index":708,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["alaska",{"_index":709,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["alert",{"_index":700,"title":{},"body":{"components/ProfileComponent.html":{}}}],["alias",{"_index":1116,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":232,"title":{},"body":{"index.html":{}}}],["alpha",{"_index":56,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":176,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":5,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":7,"title":{},"body":{"dependencies.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["angular/common/http",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"injectables/KanbanService.html":{},"interceptors/AuthInterceptor.html":{}}}],["angular/compil",{"_index":8,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":10,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{}}}],["angular/flex",{"_index":11,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":15,"title":{},"body":{"dependencies.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{}}}],["angular/http",{"_index":16,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":17,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{}}}],["angular/rout",{"_index":21,"title":{},"body":{"dependencies.html":{},"modules/CalendarRoutingModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["angular2",{"_index":27,"title":{},"body":{"dependencies.html":{},"modules/PostModule.html":{}}}],["animate.css",{"_index":31,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":139,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["app'",{"_index":215,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["app.modul",{"_index":194,"title":{},"body":{"index.html":{}}}],["app.rout",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":314,"title":{"components/AppComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["application'",{"_index":210,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":315,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{}}}],["appreduc",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["appreducers:actionreducermap",{"_index":1049,"title":{},"body":{"interfaces/AppState.html":{}}}],["appstat",{"_index":686,"title":{"interfaces/AppState.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"interfaces/AppState.html":{}}}],["arg",{"_index":904,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["arizona",{"_index":710,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["arkansa",{"_index":711,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["array",{"_index":764,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["artifact",{"_index":155,"title":{},"body":{"index.html":{}}}],["assign",{"_index":699,"title":{},"body":{"components/ProfileComponent.html":{}}}],["attach",{"_index":1053,"title":{},"body":{"interfaces/State.html":{}}}],["attatch",{"_index":254,"title":{},"body":{"index.html":{}}}],["auth.servic",{"_index":778,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authenticate_us",{"_index":947,"title":{},"body":{"classes/AuthenticateUser.html":{}}}],["authenticate_user='authenticate_us",{"_index":948,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["authenticateus",{"_index":943,"title":{"classes/AuthenticateUser.html":{}},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["authguard",{"_index":346,"title":{"injectables/AuthGuard.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"injectables/AuthGuard.html":{}}}],["authinterceptor",{"_index":324,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["authreq",{"_index":889,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authreq=req.clon",{"_index":899,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservic",{"_index":347,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{},"injectables/AuthGuard.html":{}}}],["authservice:authservic",{"_index":781,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["automat",{"_index":140,"title":{},"body":{"index.html":{}}}],["autos",{"_index":75,"title":{},"body":{"dependencies.html":{}}}],["avaiabl",{"_index":260,"title":{},"body":{"index.html":{}}}],["avail",{"_index":205,"title":{},"body":{"index.html":{},"modules.html":{}}}],["awesom",{"_index":58,"title":{},"body":{"dependencies.html":{}}}],["befor",{"_index":170,"title":{},"body":{"index.html":{}}}],["beta",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["beta.10",{"_index":95,"title":{},"body":{"dependencies.html":{}}}],["beta.12",{"_index":14,"title":{},"body":{"dependencies.html":{}}}],["beta.6",{"_index":104,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":669,"title":{},"body":{"components/NavigationTriggerComponent.html":{},"injectables/AuthGuard.html":{}}}],["bootstrap",{"_index":33,"title":{},"body":{"dependencies.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["bootstrap/datepick",{"_index":501,"title":{},"body":{"modules/PostModule.html":{}}}],["bootstrap/dropdown",{"_index":428,"title":{},"body":{"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["bootstrap/mod",{"_index":409,"title":{},"body":{"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{}}}],["bootstrap/progressbar",{"_index":458,"title":{},"body":{"modules/LayoutModule.html":{}}}],["bootstrap/timepick",{"_index":494,"title":{},"body":{"modules/PostModule.html":{}}}],["bootstrap/typeahead",{"_index":469,"title":{},"body":{"modules/LayoutModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["brows",{"_index":368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":18,"title":{},"body":{"dependencies.html":{},"modules.html":{},"modules/AppModule.html":{}}}],["browser/anim",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["bsdatepickermodul",{"_index":500,"title":{},"body":{"modules/PostModule.html":{}}}],["bsdatepickermodule.forroot",{"_index":503,"title":{},"body":{"modules/PostModule.html":{}}}],["bsdropdownmodul",{"_index":427,"title":{},"body":{"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":432,"title":{},"body":{"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["build",{"_index":153,"title":{},"body":{"index.html":{},"components/TypeaheadComponent.html":{}}}],["bundl",{"_index":189,"title":{},"body":{"index.html":{}}}],["buttonsmodul",{"_index":459,"title":{},"body":{"modules/LayoutModule.html":{}}}],["buttonsmodule.forroot",{"_index":471,"title":{},"body":{"modules/LayoutModule.html":{}}}],["calendar",{"_index":197,"title":{},"body":{"index.html":{},"modules/CalendarModule.html":{},"interfaces/AppState.html":{}}}],["calendar'},{'nam",{"_index":571,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["calendar.act",{"_index":1062,"title":{},"body":{"interfaces/State.html":{}}}],["calendar.compon",{"_index":411,"title":{},"body":{"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{}}}],["calendar.routing.modul",{"_index":406,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar.servic",{"_index":410,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar/calendar.servic",{"_index":450,"title":{},"body":{"modules/LayoutModule.html":{},"components/AddUserComponent.html":{}}}],["calendar/store/calendar.act",{"_index":811,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["calendar/store/calendar.effect",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["calendar/store/calendar.reduc",{"_index":1043,"title":{},"body":{"interfaces/AppState.html":{}}}],["calendar:calendarreduc",{"_index":1072,"title":{},"body":{"interfaces/State.html":{}}}],["calendar:calendarreducer.calendarreduc",{"_index":1050,"title":{},"body":{"interfaces/AppState.html":{}}}],["calendar:calendarreducer.st",{"_index":1047,"title":{},"body":{"interfaces/AppState.html":{}}}],["calendar:st",{"_index":1064,"title":{},"body":{"interfaces/State.html":{}}}],["calendaract",{"_index":810,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"interfaces/State.html":{},"miscellaneous/typealiases.html":{}}}],["calendaractions.calendaract",{"_index":1075,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.create_post_success",{"_index":1079,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.delete_post_success",{"_index":1090,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.drag_post_success",{"_index":1100,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.get_posts_success",{"_index":1086,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.set_post",{"_index":1088,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.set_status",{"_index":1098,"title":{},"body":{"interfaces/State.html":{}}}],["calendaractions.setposts(post",{"_index":849,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["calendaractions.setstatuses(status",{"_index":826,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["calendarcompon",{"_index":327,"title":{},"body":{"overview.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["calendareffect",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarli",{"_index":127,"title":{},"body":{"index.html":{}}}],["calendarmodul",{"_index":328,"title":{"modules/CalendarModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/CalendarModule.html":{}}}],["calendarreduc",{"_index":1042,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["calendarreducer(st",{"_index":1074,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["calendarreducer.st",{"_index":1038,"title":{},"body":{"interfaces/AppState.html":{}}}],["calendarresolveguard",{"_index":332,"title":{"injectables/CalendarResolveGuard.html":{}},"body":{"overview.html":{},"modules/CalendarModule.html":{},"injectables/CalendarResolveGuard.html":{}}}],["calendarrout",{"_index":405,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendarroutes:rout",{"_index":420,"title":{},"body":{"modules/CalendarRoutingModule.html":{}}}],["calendarroutingmodul",{"_index":331,"title":{"modules/CalendarRoutingModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{}}}],["calendarservic",{"_index":231,"title":{},"body":{"index.html":{},"overview.html":{},"modules/CalendarModule.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{}}}],["calendarservice:calendarservic",{"_index":557,"title":{},"body":{"components/AddUserComponent.html":{}}}],["california",{"_index":712,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["canactiv",{"_index":768,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["canactivate(next",{"_index":771,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["carolina",{"_index":741,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["case",{"_index":1078,"title":{},"body":{"interfaces/State.html":{}}}],["catcherror",{"_index":812,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{}}}],["central",{"_index":259,"title":{},"body":{"index.html":{}}}],["chang",{"_index":142,"title":{},"body":{"index.html":{}}}],["chart",{"_index":50,"title":{},"body":{"dependencies.html":{}}}],["chat",{"_index":209,"title":{},"body":{"index.html":{}}}],["chatbar",{"_index":214,"title":{},"body":{"index.html":{}}}],["check",{"_index":178,"title":{},"body":{"index.html":{}}}],["children",{"_index":482,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["class",{"_index":363,"title":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["cli",{"_index":9,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["click",{"_index":250,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":284,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":287,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_declar",{"_index":285,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_import",{"_index":286,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_provid",{"_index":288,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_calendarmodul",{"_index":289,"title":{},"body":{"overview.html":{},"modules/CalendarModule.html":{}}}],["cluster_calendarmodule_declar",{"_index":290,"title":{},"body":{"overview.html":{},"modules/CalendarModule.html":{}}}],["cluster_calendarmodule_import",{"_index":291,"title":{},"body":{"overview.html":{},"modules/CalendarModule.html":{}}}],["cluster_calendarmodule_provid",{"_index":292,"title":{},"body":{"overview.html":{},"modules/CalendarModule.html":{}}}],["cluster_coremodul",{"_index":293,"title":{},"body":{"overview.html":{},"modules/CoreModule.html":{}}}],["cluster_coremodule_export",{"_index":294,"title":{},"body":{"overview.html":{},"modules/CoreModule.html":{}}}],["cluster_coremodule_import",{"_index":423,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_provid",{"_index":424,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_kanbanmodul",{"_index":295,"title":{},"body":{"overview.html":{},"modules/KanbanModule.html":{}}}],["cluster_kanbanmodule_declar",{"_index":296,"title":{},"body":{"overview.html":{},"modules/KanbanModule.html":{}}}],["cluster_kanbanmodule_import",{"_index":297,"title":{},"body":{"overview.html":{},"modules/KanbanModule.html":{}}}],["cluster_kanbanmodule_provid",{"_index":298,"title":{},"body":{"overview.html":{},"modules/KanbanModule.html":{}}}],["cluster_layoutmodul",{"_index":299,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{}}}],["cluster_layoutmodule_declar",{"_index":300,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{}}}],["cluster_layoutmodule_import",{"_index":301,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{}}}],["cluster_layoutmodule_provid",{"_index":302,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{}}}],["cluster_pagesmodul",{"_index":303,"title":{},"body":{"overview.html":{},"modules/PagesModule.html":{}}}],["cluster_pagesmodule_declar",{"_index":304,"title":{},"body":{"overview.html":{},"modules/PagesModule.html":{}}}],["cluster_pagesmodule_import",{"_index":305,"title":{},"body":{"overview.html":{},"modules/PagesModule.html":{}}}],["cluster_postmodul",{"_index":306,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{}}}],["cluster_postmodule_declar",{"_index":307,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{}}}],["cluster_postmodule_export",{"_index":308,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{}}}],["cluster_postmodule_provid",{"_index":309,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{}}}],["cluster_profilemodul",{"_index":310,"title":{},"body":{"overview.html":{},"modules/ProfileModule.html":{}}}],["cluster_profilemodule_declar",{"_index":311,"title":{},"body":{"overview.html":{},"modules/ProfileModule.html":{}}}],["cluster_typeaheadcomponentmodul",{"_index":312,"title":{},"body":{"overview.html":{},"modules/TypeaheadComponentModule.html":{}}}],["cluster_typeaheadcomponentmodule_declar",{"_index":313,"title":{},"body":{"overview.html":{},"modules/TypeaheadComponentModule.html":{}}}],["code",{"_index":145,"title":{},"body":{"index.html":{}}}],["color",{"_index":81,"title":{},"body":{"dependencies.html":{}}}],["colorado",{"_index":713,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["colorpick",{"_index":36,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":255,"title":{},"body":{"index.html":{},"injectables/PostViewResolveGuard.html":{}}}],["comments:com",{"_index":872,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["comments=c",{"_index":870,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["commonmodul",{"_index":412,"title":{},"body":{"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["commun",{"_index":264,"title":{},"body":{"index.html":{}}}],["compil",{"_index":181,"title":{},"body":{"index.html":{}}}],["compon",{"_index":148,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}},"body":{"index.html":{},"overview.html":{},"modules/CalendarRoutingModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["component:logincompon",{"_index":484,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["component:signupcompon",{"_index":486,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["component_templ",{"_index":568,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["components/add",{"_index":451,"title":{},"body":{"modules/LayoutModule.html":{}}}],["config",{"_index":684,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/KanbanService.html":{}}}],["config.imag",{"_index":682,"title":{},"body":{"components/ProfileComponent.html":{}}}],["connecticut",{"_index":714,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["console.log('hello",{"_index":801,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["console.log('hello',rout",{"_index":854,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["console.log('hello111",{"_index":814,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["console.log(p",{"_index":859,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["console.log(r",{"_index":563,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthGuard.html":{}}}],["console.log(result",{"_index":846,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["console.log(st",{"_index":782,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log(this.rol",{"_index":560,"title":{},"body":{"components/AddUserComponent.html":{}}}],["console.log(this.usernam",{"_index":561,"title":{},"body":{"components/AddUserComponent.html":{}}}],["console.log(url,'url",{"_index":657,"title":{},"body":{"components/LayoutComponent.html":{}}}],["const",{"_index":419,"title":{},"body":{"modules/CalendarRoutingModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TypeaheadComponentModule.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/State.html":{}}}],["constructor",{"_index":530,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["constructor(contain",{"_index":769,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(eventsservic",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["constructor(fb",{"_index":531,"title":{},"body":{"components/AddUserComponent.html":{}}}],["constructor(http",{"_index":830,"title":{},"body":{"injectables/KanbanService.html":{}}}],["constructor(payload",{"_index":920,"title":{},"body":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["constructor(postservic",{"_index":793,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["constructor(priv",{"_index":554,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["constructor(publ",{"_index":931,"title":{},"body":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["constructor(sharedservic",{"_index":643,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"injectables/KanbanResolveGuard.html":{}}}],["contact",{"_index":698,"title":{},"body":{"components/ProfileComponent.html":{}}}],["contain",{"_index":191,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/AuthGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["container.servic",{"_index":779,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["container:containerservic",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["container:containerservice,priv",{"_index":556,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["containerservic",{"_index":325,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/AuthGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["content",{"_index":130,"title":{},"body":{"index.html":{}}}],["continu",{"_index":269,"title":{},"body":{"index.html":{},"pipes/ContinuePipe.html":{}}}],["continuepip",{"_index":316,"title":{"pipes/ContinuePipe.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"pipes/ContinuePipe.html":{}}}],["core",{"_index":43,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core/core.modul",{"_index":403,"title":{},"body":{"modules/CalendarModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{}}}],["coremodul",{"_index":318,"title":{"modules/CoreModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{}}}],["cover",{"_index":270,"title":{},"body":{"index.html":{}}}],["creat",{"_index":238,"title":{},"body":{"index.html":{},"modules/PostModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["create_post",{"_index":965,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["create_post_success",{"_index":967,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["create_top",{"_index":983,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["create_topic='create_top",{"_index":968,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["create_topic_success",{"_index":985,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["create_topic_success='create_topic_success",{"_index":969,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["createpost",{"_index":228,"title":{"classes/CreatePost.html":{}},"body":{"index.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["createpostcompon",{"_index":320,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["createpostcomponent,postviewcomponent,createtopiccompon",{"_index":505,"title":{},"body":{"modules/PostModule.html":{}}}],["createpostsuccess",{"_index":990,"title":{"classes/CreatePostSuccess.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["createtop",{"_index":982,"title":{"classes/CreateTopic.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["createtopiccompon",{"_index":322,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["createtopicsuccess",{"_index":984,"title":{"classes/CreateTopicSuccess.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["cross",{"_index":263,"title":{},"body":{"index.html":{}}}],["currentpost",{"_index":1054,"title":{},"body":{"interfaces/State.html":{}}}],["currentpost:ani",{"_index":1066,"title":{},"body":{"interfaces/State.html":{}}}],["currentpost:nul",{"_index":1070,"title":{},"body":{"interfaces/State.html":{}}}],["currentstatu",{"_index":1055,"title":{},"body":{"interfaces/State.html":{}}}],["currentstatus:ani",{"_index":1065,"title":{},"body":{"interfaces/State.html":{}}}],["currentstatus:nul",{"_index":1069,"title":{},"body":{"interfaces/State.html":{}}}],["customattributes:results[1",{"_index":806,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["dakota",{"_index":740,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["dashboard",{"_index":196,"title":{},"body":{"index.html":{}}}],["data",{"_index":249,"title":{},"body":{"index.html":{},"components/ProfileComponent.html":{},"injectables/KanbanService.html":{},"injectables/PostViewResolveGuard.html":{}}}],["data:status",{"_index":827,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["datetimepick",{"_index":38,"title":{},"body":{"dependencies.html":{}}}],["declar",{"_index":283,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{}}}],["default",{"_index":216,"title":{},"body":{"index.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/State.html":{}}}],["defin",{"_index":533,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["delawar",{"_index":715,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["delet",{"_index":253,"title":{},"body":{"index.html":{}}}],["delete_post",{"_index":993,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["delete_post='delete_post",{"_index":925,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["delete_post_success",{"_index":992,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["delete_post_success='delete_post_success",{"_index":970,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["deletepost",{"_index":932,"title":{"classes/DeletePost.html":{}},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["deletepostsuccess",{"_index":991,"title":{"classes/DeletePostSuccess.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["design",{"_index":69,"title":{},"body":{"dependencies.html":{}}}],["dev",{"_index":136,"title":{},"body":{"index.html":{}}}],["develop",{"_index":133,"title":{},"body":{"index.html":{}}}],["direct",{"_index":567,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["directive|pipe|service|class|modul",{"_index":152,"title":{},"body":{"index.html":{}}}],["directori",{"_index":158,"title":{},"body":{"index.html":{}}}],["dist",{"_index":157,"title":{},"body":{"index.html":{}}}],["dom",{"_index":516,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["drag_post",{"_index":994,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["drag_post='drag_post",{"_index":926,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["drag_post_success",{"_index":1009,"title":{},"body":{"classes/DragPostSuccess.html":{}}}],["drag_post_success='drag_post_success",{"_index":927,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["dragpost",{"_index":934,"title":{"classes/DragPost.html":{}},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["dragpostsuccess",{"_index":936,"title":{"classes/DragPostSuccess.html":{}},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["dragula",{"_index":84,"title":{},"body":{"dependencies.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{}}}],["dragulamodul",{"_index":426,"title":{},"body":{"modules/CoreModule.html":{},"modules/KanbanModule.html":{}}}],["dropzon",{"_index":46,"title":{},"body":{"dependencies.html":{}}}],["dynam",{"_index":19,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":168,"title":{},"body":{"index.html":{}}}],["easi",{"_index":48,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":226,"title":{},"body":{"index.html":{}}}],["editboard",{"_index":829,"title":{},"body":{"injectables/KanbanService.html":{}}}],["editboard(id",{"_index":833,"title":{},"body":{"injectables/KanbanService.html":{}}}],["editboard(id,data",{"_index":839,"title":{},"body":{"injectables/KanbanService.html":{}}}],["effectsmodul",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([calendareffect",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":566,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["emitt",{"_index":266,"title":{},"body":{"index.html":{}}}],["end",{"_index":167,"title":{},"body":{"index.html":{}}}],["equal",{"_index":271,"title":{},"body":{"index.html":{}}}],["er",{"_index":787,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["event",{"_index":261,"title":{},"body":{"index.html":{}}}],["events.servic",{"_index":884,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["eventsservic",{"_index":326,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/ProfileComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["eventsservice:eventsservice,priv",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["excess",{"_index":275,"title":{},"body":{"index.html":{}}}],["execut",{"_index":164,"title":{},"body":{"index.html":{}}}],["exist",{"_index":251,"title":{},"body":{"index.html":{}}}],["exitus",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":203,"title":{},"body":{"index.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["exports:[createpostcomponent,postviewcomponent,createtopiccompon",{"_index":506,"title":{},"body":{"modules/PostModule.html":{}}}],["exports:[httpclientmodule,modalmodule,postmodule,bsdropdownmodule,dragulamodul",{"_index":433,"title":{},"body":{"modules/CoreModule.html":{}}}],["express",{"_index":52,"title":{},"body":{"dependencies.html":{}}}],["factori",{"_index":256,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":89,"title":{},"body":{"dependencies.html":{},"modules/KanbanModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{}}}],["fals",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["fb",{"_index":538,"title":{},"body":{"components/AddUserComponent.html":{}}}],["fb:formbuilder,priv",{"_index":555,"title":{},"body":{"components/AddUserComponent.html":{}}}],["featur",{"_index":195,"title":{},"body":{"index.html":{}}}],["featurest",{"_index":1063,"title":{},"body":{"interfaces/State.html":{}}}],["file",{"_index":144,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["flag",{"_index":160,"title":{},"body":{"index.html":{}}}],["florida",{"_index":716,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["flot",{"_index":54,"title":{},"body":{"dependencies.html":{}}}],["folder",{"_index":192,"title":{},"body":{"index.html":{}}}],["font",{"_index":57,"title":{},"body":{"dependencies.html":{}}}],["fontawesom",{"_index":86,"title":{},"body":{"dependencies.html":{}}}],["forgot_password",{"_index":1012,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["forgot_password='forgot_password",{"_index":950,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["forgotpassword",{"_index":956,"title":{"classes/ForgotPassword.html":{}},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["forkjoin",{"_index":798,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["forkjoin([...observables]).map((results:ani",{"_index":845,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["forkjoin([...observables]).map(result",{"_index":804,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["forkjoin(observ",{"_index":864,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["forkjoin(observables).map((results:ani",{"_index":816,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["form",{"_index":240,"title":{},"body":{"index.html":{}}}],["formbuild",{"_index":532,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formgroup",{"_index":547,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formsmodul",{"_index":407,"title":{},"body":{"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["formsmodule,reactiveformsmodul",{"_index":479,"title":{},"body":{"modules/PagesModule.html":{}}}],["formsubmit",{"_index":245,"title":{},"body":{"index.html":{}}}],["formupd",{"_index":246,"title":{},"body":{"index.html":{}}}],["foundat",{"_index":761,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["frontend",{"_index":185,"title":{},"body":{"index.html":{}}}],["fullcalendar",{"_index":60,"title":{},"body":{"dependencies.html":{}}}],["fullcalendar.js(jqueri",{"_index":219,"title":{},"body":{"index.html":{}}}],["function",{"_index":1073,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":173,"title":{},"body":{"index.html":{}}}],["gener",{"_index":147,"title":{},"body":{"index.html":{}}}],["georgia",{"_index":717,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["get",{"_index":124,"title":{"index.html":{}},"body":{}}],["get_post",{"_index":977,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["get_posts='get_post",{"_index":971,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["get_posts_error",{"_index":987,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["get_posts_error='get_posts_error",{"_index":973,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["get_posts_success",{"_index":979,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["get_posts_success='get_success",{"_index":972,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["getpost",{"_index":976,"title":{"classes/GetPosts.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["getpostserror",{"_index":986,"title":{"classes/GetPostsError.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["getpostssuccess",{"_index":978,"title":{"classes/GetPostsSuccess.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["go",{"_index":177,"title":{},"body":{"index.html":{}}}],["goback",{"_index":642,"title":{},"body":{"components/LayoutComponent.html":{}}}],["graph",{"_index":369,"title":{},"body":{"modules.html":{}}}],["gulp",{"_index":183,"title":{},"body":{"index.html":{}}}],["hampshir",{"_index":735,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["hawaii",{"_index":718,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["header",{"_index":207,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["header'},{'nam",{"_index":574,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["header/header.compon",{"_index":462,"title":{},"body":{"modules/LayoutModule.html":{}}}],["header/navig",{"_index":465,"title":{},"body":{"modules/LayoutModule.html":{}}}],["header/search/search.compon",{"_index":463,"title":{},"body":{"modules/LayoutModule.html":{}}}],["headercompon",{"_index":338,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["help",{"_index":174,"title":{},"body":{"index.html":{}}}],["hidebtn",{"_index":640,"title":{},"body":{"components/LayoutComponent.html":{}}}],["hollway",{"_index":694,"title":{},"body":{"components/ProfileComponent.html":{}}}],["html",{"_index":565,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["http",{"_index":77,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/AppComponent.html":{},"injectables/KanbanService.html":{}}}],["http://localhost:4200",{"_index":138,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":837,"title":{},"body":{"injectables/KanbanService.html":{}}}],["http_interceptor",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{}}}],["httpclient",{"_index":831,"title":{},"body":{"injectables/KanbanService.html":{}}}],["httpclientmodul",{"_index":430,"title":{},"body":{"modules/CoreModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{}}}],["httpclientmodule,http_interceptor",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent,httpclient,httperrorrespons",{"_index":885,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":881,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":886,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":880,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["icon",{"_index":70,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":835,"title":{},"body":{"injectables/KanbanService.html":{},"interfaces/State.html":{}}}],["idaho",{"_index":719,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["if(",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["if(d.id===post.id",{"_index":1104,"title":{},"body":{"interfaces/State.html":{}}}],["if(o.id===post.statu",{"_index":1082,"title":{},"body":{"interfaces/State.html":{}}}],["if(observables.length",{"_index":863,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["if(p.id===id",{"_index":1092,"title":{},"body":{"interfaces/State.html":{}}}],["if(p.status===o.id",{"_index":823,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["if(this.container.authheader==='appl",{"_index":891,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["if(this.container.authheader==='bear",{"_index":893,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["if(token",{"_index":895,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["if(value.length>=25",{"_index":909,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["illinoi",{"_index":720,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["imag",{"_index":676,"title":{},"body":{"components/ProfileComponent.html":{}}}],["images=config.imag",{"_index":687,"title":{},"body":{"components/ProfileComponent.html":{}}}],["img",{"_index":88,"title":{},"body":{"dependencies.html":{},"modules/KanbanModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{}}}],["imgfallbackmodul",{"_index":510,"title":{},"body":{"modules/ProfileModule.html":{}}}],["implement",{"_index":636,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["import",{"_index":213,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["index",{"_index":126,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["index=i",{"_index":1105,"title":{},"body":{"interfaces/State.html":{}}}],["indiana",{"_index":721,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["info",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["initialst",{"_index":1068,"title":{},"body":{"interfaces/State.html":{}}}],["inject",{"_index":234,"title":{"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}},"body":{"index.html":{},"overview.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["input",{"_index":101,"title":{},"body":{"dependencies.html":{},"index.html":{},"components/AddUserComponent.html":{}}}],["instanc",{"_index":227,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["interact",{"_index":223,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":877,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":879,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":874,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.servic",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{}}}],["interceptor.service.t",{"_index":876,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.service.ts:12",{"_index":878,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.service.ts:14",{"_index":882,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":365,"title":{"interfaces/AppState.html":{},"interfaces/State.html":{}},"body":{"overview.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["iowa",{"_index":722,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["island",{"_index":747,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["jersey",{"_index":736,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["jqueri",{"_index":62,"title":{},"body":{"dependencies.html":{}}}],["jqvmap",{"_index":66,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":44,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":766,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["kanban",{"_index":436,"title":{},"body":{"modules/KanbanModule.html":{}}}],["kanban'},{'nam",{"_index":575,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["kanban.compon",{"_index":440,"title":{},"body":{"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{}}}],["kanban.routing.modul",{"_index":438,"title":{},"body":{"modules/KanbanModule.html":{}}}],["kanban.servic",{"_index":439,"title":{},"body":{"modules/KanbanModule.html":{}}}],["kanbanact",{"_index":1117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kanbanactions=addpost",{"_index":942,"title":{},"body":{"classes/AddPost.html":{}}}],["kanbancompon",{"_index":333,"title":{},"body":{"overview.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["kanbanmodul",{"_index":329,"title":{"modules/KanbanModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/KanbanModule.html":{}}}],["kanbanreduc",{"_index":1109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kanbanreducers(st",{"_index":1112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kanbanresolveguard",{"_index":336,"title":{"injectables/KanbanResolveGuard.html":{}},"body":{"overview.html":{},"modules/KanbanModule.html":{},"injectables/KanbanResolveGuard.html":{}}}],["kanbanrout",{"_index":437,"title":{},"body":{"modules/KanbanModule.html":{}}}],["kanbanroutes:rout",{"_index":443,"title":{},"body":{"modules/KanbanRoutingModule.html":{}}}],["kanbanroutingmodul",{"_index":334,"title":{"modules/KanbanRoutingModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{}}}],["kanbanservic",{"_index":335,"title":{"injectables/KanbanService.html":{}},"body":{"overview.html":{},"modules/KanbanModule.html":{},"injectables/KanbanService.html":{}}}],["kansa",{"_index":723,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["karma",{"_index":166,"title":{},"body":{"index.html":{}}}],["kentucki",{"_index":724,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["layout",{"_index":12,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/LayoutModule.html":{},"components/LayoutComponent.html":{}}}],["layout'},{'nam",{"_index":576,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["layout.compon",{"_index":461,"title":{},"body":{"modules/LayoutModule.html":{}}}],["layout.component.html",{"_index":639,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.rout",{"_index":456,"title":{},"body":{"modules/LayoutModule.html":{}}}],["layout/store/main.reduc",{"_index":1046,"title":{},"body":{"interfaces/AppState.html":{}}}],["layoutcompon",{"_index":337,"title":{"components/LayoutComponent.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["layoutmodul",{"_index":319,"title":{"modules/LayoutModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/LayoutModule.html":{}}}],["layoutresolveguard",{"_index":345,"title":{"injectables/LayoutResolveGuard.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"injectables/LayoutResolveGuard.html":{}}}],["layoutrout",{"_index":343,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{}}}],["legend",{"_index":282,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["load",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["loader",{"_index":78,"title":{},"body":{"dependencies.html":{}}}],["loader.modul",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["loader/ng",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["loader/spinkit",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["loading=fals",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["log",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["logic",{"_index":212,"title":{},"body":{"index.html":{}}}],["login",{"_index":483,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["login'},{'nam",{"_index":577,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["login/login.compon",{"_index":477,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["logincompon",{"_index":349,"title":{},"body":{"overview.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["louisiana",{"_index":725,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["made",{"_index":204,"title":{},"body":{"index.html":{}}}],["main",{"_index":188,"title":{},"body":{"index.html":{},"components/TypeaheadComponent.html":{},"interfaces/AppState.html":{}}}],["main:mainreducers.mainreduc",{"_index":1051,"title":{},"body":{"interfaces/AppState.html":{}}}],["main:mainreducers.st",{"_index":1048,"title":{},"body":{"interfaces/AppState.html":{}}}],["mainact",{"_index":961,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["mainli",{"_index":279,"title":{},"body":{"index.html":{}}}],["mainreduc",{"_index":1045,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["mainreducers(st",{"_index":1114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mainreducers.st",{"_index":1040,"title":{},"body":{"interfaces/AppState.html":{}}}],["major",{"_index":200,"title":{},"body":{"index.html":{}}}],["make",{"_index":171,"title":{},"body":{"index.html":{}}}],["malinda",{"_index":693,"title":{},"body":{"components/ProfileComponent.html":{}}}],["manag",{"_index":131,"title":{},"body":{"index.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["map",{"_index":274,"title":{},"body":{"index.html":{}}}],["map(c",{"_index":869,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["maryland",{"_index":726,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["mask",{"_index":29,"title":{},"body":{"dependencies.html":{},"modules/PostModule.html":{}}}],["massachusett",{"_index":727,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["match",{"_index":123,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["materi",{"_index":68,"title":{},"body":{"dependencies.html":{}}}],["mathem",{"_index":641,"title":{},"body":{"components/LayoutComponent.html":{}}}],["media",{"_index":129,"title":{},"body":{"index.html":{}}}],["mergemap((results:ani",{"_index":866,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["mergemap(p",{"_index":858,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["metadata",{"_index":520,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"pipes/ContinuePipe.html":{}}}],["method",{"_index":257,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{}}}],["mexico",{"_index":737,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["michigan",{"_index":728,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["minnesota",{"_index":729,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["miscellan",{"_index":1108,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mississippi",{"_index":730,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["missouri",{"_index":731,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["modalmodul",{"_index":408,"title":{},"body":{"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{}}}],["modalmodule.forroot",{"_index":431,"title":{},"body":{"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{}}}],["model",{"_index":765,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["modul",{"_index":190,"title":{"modules.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}},"body":{"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["modular",{"_index":242,"title":{},"body":{"index.html":{}}}],["moment",{"_index":72,"title":{},"body":{"dependencies.html":{},"components/AddUserComponent.html":{}}}],["montana",{"_index":732,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["more",{"_index":175,"title":{},"body":{"index.html":{}}}],["mp4.it",{"_index":278,"title":{},"body":{"index.html":{}}}],["multi",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["name",{"_index":149,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":137,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["navigation'},{'nam",{"_index":578,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["navigation/navigation.compon",{"_index":464,"title":{},"body":{"modules/LayoutModule.html":{}}}],["navigationcompon",{"_index":340,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["navigationend",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationtriggercompon",{"_index":341,"title":{"components/NavigationTriggerComponent.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["nebraska",{"_index":733,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["nevada",{"_index":734,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["new",{"_index":150,"title":{},"body":{"index.html":{},"components/TypeaheadComponent.html":{}}}],["next",{"_index":775,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["next.handle(authreq",{"_index":900,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":74,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/AppComponent.html":{}}}],["ng2",{"_index":80,"title":{},"body":{"dependencies.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/PostModule.html":{}}}],["ng2imgfallbackmodul",{"_index":435,"title":{},"body":{"modules/KanbanModule.html":{},"modules/PostModule.html":{}}}],["ng4",{"_index":99,"title":{},"body":{"dependencies.html":{}}}],["nghttploadermodul",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["ngmodul",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["ngoninit",{"_index":529,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["ngrx/effect",{"_index":22,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{}}}],["ngrx/store",{"_index":24,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["ngx",{"_index":103,"title":{},"body":{"dependencies.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["north",{"_index":739,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["nouislid",{"_index":91,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":39,"title":{},"body":{"dependencies.html":{}}}],["o.data",{"_index":821,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["o.data.foreach(d",{"_index":1103,"title":{},"body":{"interfaces/State.html":{}}}],["o.data.push(p",{"_index":824,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["o.data.push(post",{"_index":1083,"title":{},"body":{"interfaces/State.html":{}}}],["observ",{"_index":776,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["observable.create(observ",{"_index":783,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["observable.create(observer=>observer.next",{"_index":865,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["observables.push(this.sharedservice.getuserdetails(id",{"_index":862,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["observables[0]=this.postservice.getpost",{"_index":802,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["observables[0]=this.sharedservice.getpoststatuses().map((res:any[])=>res.filter(item=>item.project===this.container.projectid",{"_index":815,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["observables[1]=this.postservice.getcustomattribut",{"_index":803,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["observables[2]=this.sharedservice.getpoststatus",{"_index":844,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["observer.complet",{"_index":786,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["observer.next(fals",{"_index":789,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["observer.next(tru",{"_index":785,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["ohio",{"_index":742,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["oklahoma",{"_index":743,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["on",{"_index":267,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":637,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["oninit,input,output,eventemitt",{"_index":549,"title":{},"body":{"components/AddUserComponent.html":{}}}],["onther",{"_index":235,"title":{},"body":{"index.html":{}}}],["open",{"_index":217,"title":{},"body":{"index.html":{}}}],["oper",{"_index":258,"title":{},"body":{"index.html":{}}}],["option",{"_index":537,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/functions.html":{}}}],["oregon",{"_index":744,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["out",{"_index":179,"title":{},"body":{"index.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AppComponent.html":{}}}],["output",{"_index":243,"title":{},"body":{"index.html":{}}}],["overview",{"_index":281,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.watchers.foreach(id",{"_index":861,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":218,"title":{},"body":{"index.html":{}}}],["pages.routing.modul",{"_index":478,"title":{},"body":{"modules/PagesModule.html":{}}}],["pagesmodul",{"_index":330,"title":{"modules/PagesModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/PagesModule.html":{}}}],["pagesrout",{"_index":481,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["pagesroutingmodul",{"_index":351,"title":{"modules/PagesRoutingModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["paramet",{"_index":535,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":421,"title":{},"body":{"modules/CalendarRoutingModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["payload",{"_index":918,"title":{},"body":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["pennsylvania",{"_index":745,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["picker",{"_index":82,"title":{},"body":{"dependencies.html":{}}}],["pie",{"_index":49,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":268,"title":{"pipes/ContinuePipe.html":{}},"body":{"index.html":{},"overview.html":{},"pipes/ContinuePipe.html":{}}}],["pipe(catcherror(this.sharedservice.handleerror",{"_index":841,"title":{},"body":{"injectables/KanbanService.html":{}}}],["pipes/continue.pip",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":907,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["plugin",{"_index":221,"title":{},"body":{"index.html":{}}}],["popper.j",{"_index":107,"title":{},"body":{"dependencies.html":{}}}],["popul",{"_index":248,"title":{},"body":{"index.html":{}}}],["portal",{"_index":132,"title":{},"body":{"index.html":{}}}],["post",{"_index":199,"title":{},"body":{"index.html":{},"modules/PostModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/PostViewResolveGuard.html":{},"interfaces/State.html":{}}}],["post'},{'nam",{"_index":572,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["post.compon",{"_index":499,"title":{},"body":{"modules/PostModule.html":{}}}],["post.routing.modul",{"_index":490,"title":{},"body":{"modules/PostModule.html":{}}}],["post.servic",{"_index":496,"title":{},"body":{"modules/PostModule.html":{}}}],["post/creat",{"_index":498,"title":{},"body":{"modules/PostModule.html":{}}}],["post/post",{"_index":446,"title":{},"body":{"modules/LayoutModule.html":{}}}],["post/post.modul",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{}}}],["post/post.servic",{"_index":797,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["post:post",{"_index":871,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["post=action.payload",{"_index":1081,"title":{},"body":{"interfaces/State.html":{}}}],["post=p",{"_index":860,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["post],statuses:status",{"_index":1085,"title":{},"body":{"interfaces/State.html":{}}}],["postdata",{"_index":247,"title":{},"body":{"index.html":{}}}],["postid=route.params.id",{"_index":856,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["postmodul",{"_index":317,"title":{"modules/PostModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{},"modules/PostModule.html":{}}}],["postrout",{"_index":489,"title":{},"body":{"modules/PostModule.html":{}}}],["posts.foreach((p,i",{"_index":1091,"title":{},"body":{"interfaces/State.html":{}}}],["posts.foreach(p",{"_index":822,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["posts.splice(i,1",{"_index":1093,"title":{},"body":{"interfaces/State.html":{}}}],["posts:action.payload",{"_index":1087,"title":{},"body":{"interfaces/State.html":{}}}],["posts:results[0",{"_index":805,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["posts=results[0",{"_index":847,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["posts=this.container.posts.slic",{"_index":819,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["postservic",{"_index":352,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["postservice:postservic",{"_index":800,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["postservice:postservice,priv",{"_index":843,"title":{},"body":{"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["postviewcompon",{"_index":321,"title":{},"body":{"overview.html":{},"modules/PostModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["postviewresolveguard",{"_index":348,"title":{"injectables/PostViewResolveGuard.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"injectables/PostViewResolveGuard.html":{}}}],["privat",{"_index":652,"title":{},"body":{"components/LayoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{}}}],["prod",{"_index":159,"title":{},"body":{"index.html":{}}}],["product",{"_index":161,"title":{},"body":{"index.html":{}}}],["profil",{"_index":198,"title":{},"body":{"index.html":{}}}],["profile.compon",{"_index":509,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.html",{"_index":675,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.compon",{"_index":455,"title":{},"body":{"modules/LayoutModule.html":{}}}],["profile/profile.modul",{"_index":454,"title":{},"body":{"modules/LayoutModule.html":{}}}],["profile1",{"_index":674,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile1'},{'nam",{"_index":581,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["profilecompon",{"_index":353,"title":{"components/ProfileComponent.html":{}},"body":{"overview.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["profilemodul",{"_index":344,"title":{"modules/ProfileModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/LayoutModule.html":{},"modules/ProfileModule.html":{}}}],["progressbarmodul",{"_index":457,"title":{},"body":{"modules/LayoutModule.html":{}}}],["progressbarmodule.forroot",{"_index":470,"title":{},"body":{"modules/LayoutModule.html":{}}}],["project",{"_index":154,"title":{},"body":{"index.html":{}}}],["promis",{"_index":777,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":244,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["protractor",{"_index":169,"title":{},"body":{"index.html":{}}}],["provid",{"_index":225,"title":{},"body":{"index.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/TypeaheadComponent.html":{}}}],["providers/auth.guard",{"_index":449,"title":{},"body":{"modules/LayoutModule.html":{}}}],["providers/auth.servic",{"_index":448,"title":{},"body":{"modules/LayoutModule.html":{}}}],["providers/config",{"_index":685,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/KanbanService.html":{}}}],["providers/container.servic",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["providers/events.servic",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["providers/interceptors/auth",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/LayoutModule.html":{}}}],["providers/shared.servic",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["providers:[calendarservice,calendarresolveguard",{"_index":416,"title":{},"body":{"modules/CalendarModule.html":{}}}],["providers:[calendarservice,layoutresolveguard,authguard,authservice,postviewresolveguard",{"_index":474,"title":{},"body":{"modules/LayoutModule.html":{}}}],["providers:[kanbanservice,kanbanresolveguard",{"_index":441,"title":{},"body":{"modules/KanbanModule.html":{}}}],["providers:[postservic",{"_index":507,"title":{},"body":{"modules/PostModule.html":{}}}],["public",{"_index":917,"title":{},"body":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["re",{"_index":202,"title":{},"body":{"index.html":{}}}],["reactiveformsmodul",{"_index":429,"title":{},"body":{"modules/CoreModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{}}}],["reactiveformsmodule,formsmodul",{"_index":495,"title":{},"body":{"modules/PostModule.html":{}}}],["readm",{"_index":180,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":919,"title":{},"body":{"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["reduc",{"_index":413,"title":{},"body":{"modules/CalendarModule.html":{}}}],["reducer.t",{"_index":1111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reducer:actionreducermap",{"_index":1071,"title":{},"body":{"interfaces/State.html":{}}}],["refresh",{"_index":695,"title":{},"body":{"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["relat",{"_index":233,"title":{},"body":{"index.html":{}}}],["reload",{"_index":141,"title":{},"body":{"index.html":{}}}],["req",{"_index":883,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone({head",{"_index":896,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":897,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":236,"title":{},"body":{"index.html":{}}}],["resembl",{"_index":277,"title":{},"body":{"index.html":{}}}],["reset",{"_index":357,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["resolv",{"_index":792,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["resolve(rout",{"_index":795,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["resolve.guard",{"_index":404,"title":{},"body":{"modules/CalendarModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{}}}],["resolve.guard.t",{"_index":791,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["resolve.guard.ts:10",{"_index":796,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["resolve.guard.ts:11",{"_index":853,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["resolve.guard.ts:12",{"_index":808,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["resolve.guard.ts:16",{"_index":809,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["resolve.guard.ts:7",{"_index":794,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["resolve.guard.ts:8",{"_index":852,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["result",{"_index":122,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":541,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"interfaces/State.html":{}}}],["rhode",{"_index":746,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["robust",{"_index":762,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["role",{"_index":526,"title":{},"body":{"components/AddUserComponent.html":{}}}],["role.nam",{"_index":564,"title":{},"body":{"components/AddUserComponent.html":{}}}],["root",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":570,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["rout",{"_index":211,"title":{},"body":{"index.html":{},"overview.html":{},"modules/AppModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"components/LayoutComponent.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["route:activatedrout",{"_index":653,"title":{},"body":{"components/LayoutComponent.html":{}}}],["routeconfigloadend",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["routeconfigloadstart",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":546,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["router,navigationstart,navigationend",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["router:rout",{"_index":888,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["router:router,priv",{"_index":613,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{}}}],["routermodul",{"_index":418,"title":{},"body":{"modules/CalendarRoutingModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["routermodule.forchild(calendarrout",{"_index":422,"title":{},"body":{"modules/CalendarRoutingModule.html":{}}}],["routermodule.forchild(kanbanrout",{"_index":444,"title":{},"body":{"modules/KanbanRoutingModule.html":{}}}],["routermodule.forchild(pagesrout",{"_index":487,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["routermodule.forchild(typeahead_rout",{"_index":514,"title":{},"body":{"modules/TypeaheadComponentModule.html":{}}}],["routerstatesnapshot",{"_index":773,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["run",{"_index":134,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":109,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["rxjs/add/operator/do",{"_index":887,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["rxjs/observ",{"_index":780,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{}}}],["rxjs/observable/forkjoin",{"_index":799,"title":{},"body":{"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["rxjs/oper",{"_index":813,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["rxjs/operators/catcherror",{"_index":836,"title":{},"body":{"injectables/KanbanService.html":{}}}],["s.data.foreach((p,i",{"_index":1095,"title":{},"body":{"interfaces/State.html":{}}}],["s.data.splice(i,1",{"_index":1096,"title":{},"body":{"interfaces/State.html":{}}}],["scaffold",{"_index":146,"title":{},"body":{"index.html":{}}}],["search'},{'nam",{"_index":582,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["searchcompon",{"_index":339,"title":{},"body":{"overview.html":{},"modules/LayoutModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["select",{"_index":704,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["select2",{"_index":93,"title":{},"body":{"dependencies.html":{}}}],["selected:str",{"_index":758,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selector",{"_index":521,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["serv",{"_index":135,"title":{},"body":{"index.html":{}}}],["server",{"_index":20,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["servic",{"_index":230,"title":{},"body":{"index.html":{}}}],["set",{"_index":697,"title":{},"body":{"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["set_current_post",{"_index":1020,"title":{},"body":{"classes/SetCurrentPost.html":{}}}],["set_current_post='set_current_post",{"_index":928,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["set_current_statu",{"_index":1023,"title":{},"body":{"classes/SetCurrentStatus.html":{}}}],["set_current_status='set_current_statu",{"_index":929,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["set_post",{"_index":989,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["set_posts='set_post",{"_index":975,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["set_status",{"_index":981,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["set_statuses='set_status",{"_index":974,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["set_token",{"_index":1030,"title":{},"body":{"classes/SetToken.html":{}}}],["set_token='set_token",{"_index":952,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["setcurrentpost",{"_index":938,"title":{"classes/SetCurrentPost.html":{}},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["setcurrentstatu",{"_index":940,"title":{"classes/SetCurrentStatus.html":{}},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["setpost",{"_index":988,"title":{"classes/SetPosts.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["setstatus",{"_index":980,"title":{"classes/SetStatuses.html":{}},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["settoken",{"_index":959,"title":{"classes/SetToken.html":{}},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["seveal",{"_index":241,"title":{},"body":{"index.html":{}}}],["share",{"_index":201,"title":{},"body":{"index.html":{}}}],["shared/services/shared.servic",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["sharedservic",{"_index":323,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{}}}],["sharedservice,priv",{"_index":651,"title":{},"body":{"components/LayoutComponent.html":{}}}],["sharedservice.mathemesubject.subscribe((valu",{"_index":654,"title":{},"body":{"components/LayoutComponent.html":{}}}],["sharedservice.sidebarvisibilitysubject.subscribe((valu",{"_index":670,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["sharedservice:sharedservic",{"_index":838,"title":{},"body":{"injectables/KanbanService.html":{},"injectables/PostViewResolveGuard.html":{}}}],["sharedservice:sharedservice,priv",{"_index":612,"title":{},"body":{"components/AppComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["showload",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["sidebar",{"_index":208,"title":{},"body":{"index.html":{}}}],["sidebarvis",{"_index":664,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["sign_out_us",{"_index":1033,"title":{},"body":{"classes/SignOutUser.html":{}}}],["sign_out_user='sign_out",{"_index":949,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["signoutus",{"_index":954,"title":{"classes/SignOutUser.html":{}},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["signup",{"_index":485,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["signup'},{'nam",{"_index":583,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["signup/signup.compon",{"_index":476,"title":{},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{}}}],["signupcompon",{"_index":350,"title":{},"body":{"overview.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["similar",{"_index":276,"title":{},"body":{"index.html":{}}}],["size",{"_index":273,"title":{},"body":{"index.html":{}}}],["social",{"_index":128,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":143,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CalendarRoutingModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/KanbanRoutingModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["south",{"_index":748,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["sparklin",{"_index":64,"title":{},"body":{"dependencies.html":{}}}],["spinkit",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.t",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/calendar/calendar",{"_index":790,"title":{},"body":{"injectables/CalendarResolveGuard.html":{}}}],["src/app/calendar/calendar.module.t",{"_index":402,"title":{},"body":{"modules/CalendarModule.html":{}}}],["src/app/calendar/calendar.routing.module.t",{"_index":417,"title":{},"body":{"modules/CalendarRoutingModule.html":{}}}],["src/app/calendar/store/calendar.actions.t",{"_index":962,"title":{},"body":{"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/calendar/store/calendar.actions.ts:100",{"_index":1022,"title":{},"body":{"classes/SetCurrentStatus.html":{}}}],["src/app/calendar/store/calendar.actions.ts:24",{"_index":1013,"title":{},"body":{"classes/GetPosts.html":{}}}],["src/app/calendar/store/calendar.actions.ts:29",{"_index":1016,"title":{},"body":{"classes/GetPostsSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:30",{"_index":1017,"title":{},"body":{"classes/GetPostsSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:35",{"_index":1026,"title":{},"body":{"classes/SetStatuses.html":{}}}],["src/app/calendar/store/calendar.actions.ts:36",{"_index":1027,"title":{},"body":{"classes/SetStatuses.html":{}}}],["src/app/calendar/store/calendar.actions.ts:40",{"_index":997,"title":{},"body":{"classes/CreateTopic.html":{}}}],["src/app/calendar/store/calendar.actions.ts:41",{"_index":998,"title":{},"body":{"classes/CreateTopic.html":{}}}],["src/app/calendar/store/calendar.actions.ts:45",{"_index":999,"title":{},"body":{"classes/CreateTopicSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:46",{"_index":1000,"title":{},"body":{"classes/CreateTopicSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:51",{"_index":1014,"title":{},"body":{"classes/GetPostsError.html":{}}}],["src/app/calendar/store/calendar.actions.ts:52",{"_index":1015,"title":{},"body":{"classes/GetPostsError.html":{}}}],["src/app/calendar/store/calendar.actions.ts:56",{"_index":1024,"title":{},"body":{"classes/SetPosts.html":{}}}],["src/app/calendar/store/calendar.actions.ts:57",{"_index":1025,"title":{},"body":{"classes/SetPosts.html":{}}}],["src/app/calendar/store/calendar.actions.ts:61",{"_index":963,"title":{},"body":{"classes/CreatePost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:62",{"_index":964,"title":{},"body":{"classes/CreatePost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:66",{"_index":995,"title":{},"body":{"classes/CreatePostSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:67",{"_index":996,"title":{},"body":{"classes/CreatePostSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:71",{"_index":1003,"title":{},"body":{"classes/DeletePostSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:72",{"_index":1004,"title":{},"body":{"classes/DeletePostSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:76",{"_index":1001,"title":{},"body":{"classes/DeletePost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:77",{"_index":1002,"title":{},"body":{"classes/DeletePost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:80",{"_index":1005,"title":{},"body":{"classes/DragPost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:81",{"_index":1006,"title":{},"body":{"classes/DragPost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:87",{"_index":1007,"title":{},"body":{"classes/DragPostSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:88",{"_index":1008,"title":{},"body":{"classes/DragPostSuccess.html":{}}}],["src/app/calendar/store/calendar.actions.ts:93",{"_index":1018,"title":{},"body":{"classes/SetCurrentPost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:94",{"_index":1019,"title":{},"body":{"classes/SetCurrentPost.html":{}}}],["src/app/calendar/store/calendar.actions.ts:99",{"_index":1021,"title":{},"body":{"classes/SetCurrentStatus.html":{}}}],["src/app/calendar/store/calendar.reducer.t",{"_index":1052,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/app/calendar/store/calendar.reducer.ts:10",{"_index":1060,"title":{},"body":{"interfaces/State.html":{}}}],["src/app/calendar/store/calendar.reducer.ts:11",{"_index":1057,"title":{},"body":{"interfaces/State.html":{}}}],["src/app/calendar/store/calendar.reducer.ts:12",{"_index":1059,"title":{},"body":{"interfaces/State.html":{}}}],["src/app/calendar/store/calendar.reducer.ts:13",{"_index":1058,"title":{},"body":{"interfaces/State.html":{}}}],["src/app/calendar/store/calendar.reducer.ts:14",{"_index":1061,"title":{},"body":{"interfaces/State.html":{}}}],["src/app/components/add",{"_index":518,"title":{},"body":{"components/AddUserComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.t",{"_index":701,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:10",{"_index":705,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:14",{"_index":706,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:9",{"_index":707,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.module.t",{"_index":511,"title":{},"body":{"modules/TypeaheadComponentModule.html":{}}}],["src/app/core/core.module.t",{"_index":425,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/kanban/kanban",{"_index":807,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["src/app/kanban/kanban.module.t",{"_index":434,"title":{},"body":{"modules/KanbanModule.html":{}}}],["src/app/kanban/kanban.routing.module.t",{"_index":442,"title":{},"body":{"modules/KanbanRoutingModule.html":{}}}],["src/app/kanban/kanban.service.t",{"_index":828,"title":{},"body":{"injectables/KanbanService.html":{}}}],["src/app/kanban/kanban.service.ts:14",{"_index":834,"title":{},"body":{"injectables/KanbanService.html":{}}}],["src/app/kanban/kanban.service.ts:9",{"_index":832,"title":{},"body":{"injectables/KanbanService.html":{}}}],["src/app/kanban/store/kanban",{"_index":914,"title":{},"body":{"classes/AddPost.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/layout/header/navig",{"_index":659,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["src/app/layout/layout",{"_index":842,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["src/app/layout/layout.component.t",{"_index":635,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:12",{"_index":645,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:21",{"_index":647,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:26",{"_index":648,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:27",{"_index":646,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.module.t",{"_index":445,"title":{},"body":{"modules/LayoutModule.html":{}}}],["src/app/layout/store/main.actions.t",{"_index":944,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/layout/store/main.actions.ts:11",{"_index":945,"title":{},"body":{"classes/AuthenticateUser.html":{}}}],["src/app/layout/store/main.actions.ts:12",{"_index":946,"title":{},"body":{"classes/AuthenticateUser.html":{}}}],["src/app/layout/store/main.actions.ts:17",{"_index":1031,"title":{},"body":{"classes/SignOutUser.html":{}}}],["src/app/layout/store/main.actions.ts:18",{"_index":1032,"title":{},"body":{"classes/SignOutUser.html":{}}}],["src/app/layout/store/main.actions.ts:23",{"_index":1010,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["src/app/layout/store/main.actions.ts:24",{"_index":1011,"title":{},"body":{"classes/ForgotPassword.html":{}}}],["src/app/layout/store/main.actions.ts:29",{"_index":1034,"title":{},"body":{"classes/UserUpdated.html":{}}}],["src/app/layout/store/main.actions.ts:30",{"_index":1035,"title":{},"body":{"classes/UserUpdated.html":{}}}],["src/app/layout/store/main.actions.ts:35",{"_index":1028,"title":{},"body":{"classes/SetToken.html":{}}}],["src/app/layout/store/main.actions.ts:36",{"_index":1029,"title":{},"body":{"classes/SetToken.html":{}}}],["src/app/layout/store/main.reducers.t",{"_index":1113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/pages/pages.module.t",{"_index":475,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/pages/pages.routing.module.t",{"_index":480,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pipes/continue.pipe.t",{"_index":901,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["src/app/pipes/continue.pipe.ts:8",{"_index":905,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["src/app/post/post",{"_index":851,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["src/app/post/post.module.t",{"_index":488,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/profile/profile.component.t",{"_index":673,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:14",{"_index":678,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:17",{"_index":681,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:18",{"_index":679,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":683,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":680,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.module.t",{"_index":508,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/providers/auth.guard.t",{"_index":767,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/providers/auth.guard.ts:12",{"_index":774,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/providers/auth.guard.ts:8",{"_index":770,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/providers/interceptors/auth",{"_index":875,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/store/app.reducers.t",{"_index":1037,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/app.reducers.ts:6",{"_index":1039,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/app.reducers.ts:7",{"_index":1041,"title":{},"body":{"interfaces/AppState.html":{}}}],["start",{"_index":125,"title":{"index.html":{}},"body":{}}],["state",{"_index":606,"title":{"interfaces/State.html":{}},"body":{"components/AppComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["state,statuses:action.payload",{"_index":1099,"title":{},"body":{"interfaces/State.html":{}}}],["state,statuses:status",{"_index":1107,"title":{},"body":{"interfaces/State.html":{}}}],["state.post",{"_index":1084,"title":{},"body":{"interfaces/State.html":{}}}],["states:str",{"_index":759,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["static",{"_index":763,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["status",{"_index":1056,"title":{},"body":{"interfaces/State.html":{}}}],["statuses.foreach((",{"_index":1094,"title":{},"body":{"interfaces/State.html":{}}}],["statuses.foreach((o,i",{"_index":1102,"title":{},"body":{"interfaces/State.html":{}}}],["statuses.foreach(o",{"_index":820,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"interfaces/State.html":{}}}],["statuses:ani",{"_index":1067,"title":{},"body":{"interfaces/State.html":{}}}],["statuses:status",{"_index":1097,"title":{},"body":{"interfaces/State.html":{}}}],["statuses=[...state.status",{"_index":1080,"title":{},"body":{"interfaces/State.html":{}}}],["statuses=results[0",{"_index":817,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["statuses=results[2",{"_index":848,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["statuses=state.statuses.slic",{"_index":1101,"title":{},"body":{"interfaces/State.html":{}}}],["statuses[index]=post",{"_index":1106,"title":{},"body":{"interfaces/State.html":{}}}],["store",{"_index":156,"title":{},"body":{"index.html":{},"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["store/app.reduc",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["store/calendar.reduc",{"_index":414,"title":{},"body":{"modules/CalendarModule.html":{}}}],["store:stor",{"_index":688,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["storemodul",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/CalendarModule.html":{}}}],["storemodule.forfeature('calendar',reduc",{"_index":415,"title":{},"body":{"modules/CalendarModule.html":{}}}],["storemodule.forroot(appreduc",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["str",{"_index":912,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["str:string",{"_index":908,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["str=value.slice(0,20)+'...'+value.slice(value.length",{"_index":910,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["string",{"_index":272,"title":{},"body":{"index.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/TypeaheadComponent.html":{},"pipes/ContinuePipe.html":{}}}],["strong",{"_index":760,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["structur",{"_index":187,"title":{},"body":{"index.html":{}}}],["style.scss",{"_index":638,"title":{},"body":{"components/LayoutComponent.html":{}}}],["styleurl",{"_index":522,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/TypeaheadComponent.html":{}}}],["styleurls:['./app.component.scss",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls:['./style.scss",{"_index":650,"title":{},"body":{"components/LayoutComponent.html":{}}}],["subject",{"_index":262,"title":{},"body":{"index.html":{}}}],["subjects,ev",{"_index":265,"title":{},"body":{"index.html":{}}}],["such",{"_index":206,"title":{},"body":{"index.html":{}}}],["summernot",{"_index":112,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":366,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":172,"title":{},"body":{"index.html":{}}}],["svg",{"_index":367,"title":{},"body":{"modules.html":{}}}],["swal:ani",{"_index":553,"title":{},"body":{"components/AddUserComponent.html":{}}}],["sweetalert2",{"_index":114,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1076,"title":{},"body":{"interfaces/State.html":{}}}],["tabl",{"_index":96,"title":{},"body":{"dependencies.html":{}}}],["tag",{"_index":100,"title":{},"body":{"dependencies.html":{}}}],["tagsinput",{"_index":41,"title":{},"body":{"dependencies.html":{}}}],["task",{"_index":186,"title":{},"body":{"index.html":{}}}],["templat",{"_index":515,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["templateurl",{"_index":524,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["temporari",{"_index":184,"title":{},"body":{"index.html":{}}}],["tennesse",{"_index":749,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["test",{"_index":163,"title":{},"body":{"index.html":{}}}],["texa",{"_index":750,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["text",{"_index":28,"title":{},"body":{"dependencies.html":{},"modules/PostModule.html":{}}}],["textmaskmodul",{"_index":502,"title":{},"body":{"modules/PostModule.html":{}}}],["this.authservice.gettoken().subscribe(r",{"_index":784,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.authservice.handleerror(",{"_index":788,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.calendarservice.addmember({project:this.container.projectid,role:this.role,username:this.username}).subscribe(r",{"_index":562,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.container.authhead",{"_index":898,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.container.customattributes=results[1",{"_index":850,"title":{},"body":{"injectables/LayoutResolveGuard.html":{}}}],["this.container.statuses=status",{"_index":818,"title":{},"body":{"injectables/KanbanResolveGuard.html":{}}}],["this.eventsservice.exituser.subscrib",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["this.eventsservice.showloader.subscribe(show",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["this.exitus",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.patch(config.url+'/api/v1/userstories/'+id,data",{"_index":840,"title":{},"body":{"injectables/KanbanService.html":{}}}],["this.loading=fals",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading=show",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading=tru",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mathem",{"_index":655,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.postservice.getcomments(post.id",{"_index":868,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["this.postservice.getpost(postid",{"_index":857,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["this.route..subscribe(url",{"_index":656,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.events.subscribe(",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navig",{"_index":658,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.navigate(['/','pages','login",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sharedservice.mathem",{"_index":649,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.sharedservice.notify('y",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sharedservice.sidebarvisibilitysubject.next(fals",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sharedservice.togglesidebarvisibilti",{"_index":672,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["this.showload",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidebarvis",{"_index":671,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["this.store.dispatch(new",{"_index":825,"title":{},"body":{"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{}}}],["this.store.select('main').subscribe(st",{"_index":691,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.role=number(this.user.rol",{"_index":559,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.user=state.us",{"_index":692,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user=this.container.us",{"_index":689,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userupd",{"_index":690,"title":{},"body":{"components/ProfileComponent.html":{}}}],["timepickermodul",{"_index":493,"title":{},"body":{"modules/PostModule.html":{}}}],["timepickermodule.forroot",{"_index":504,"title":{},"body":{"modules/PostModule.html":{}}}],["titl",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["toastr",{"_index":97,"title":{},"body":{"dependencies.html":{}}}],["togglesidebarvis",{"_index":665,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["token",{"_index":890,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["token=window[this.container.storagestrategy].getitem('authtoken",{"_index":894,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["token=window[this.container.storagestrategy].getitem('cypheredtoken",{"_index":892,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tooltipmodul",{"_index":460,"title":{},"body":{"modules/LayoutModule.html":{}}}],["tooltipmodule.forroot",{"_index":473,"title":{},"body":{"modules/LayoutModule.html":{}}}],["topic'},{'nam",{"_index":573,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["topic.compon",{"_index":492,"title":{},"body":{"modules/PostModule.html":{}}}],["topic/cr",{"_index":491,"title":{},"body":{"modules/PostModule.html":{}}}],["transform",{"_index":902,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["transform(valu",{"_index":903,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["tree",{"_index":517,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["trigger",{"_index":661,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger'},{'nam",{"_index":579,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["trigger.compon",{"_index":467,"title":{},"body":{"modules/LayoutModule.html":{}}}],["trigger.component.html",{"_index":663,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger.component.scss",{"_index":662,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger.component.t",{"_index":660,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger.component.ts:10",{"_index":666,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger.component.ts:18",{"_index":668,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger.component.ts:22",{"_index":667,"title":{},"body":{"components/NavigationTriggerComponent.html":{}}}],["trigger/navig",{"_index":466,"title":{},"body":{"modules/LayoutModule.html":{},"components/NavigationTriggerComponent.html":{}}}],["true",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["trumbowyg",{"_index":116,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":536,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/KanbanService.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type=add_post",{"_index":930,"title":{},"body":{"classes/AddPost.html":{}}}],["type=authenticate_us",{"_index":953,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["type=delete_post",{"_index":933,"title":{},"body":{"classes/AddPost.html":{}}}],["type=drag_post",{"_index":935,"title":{},"body":{"classes/AddPost.html":{}}}],["type=drag_post_success",{"_index":937,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["type=forgot_password",{"_index":957,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["type=set_current_post",{"_index":939,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["type=set_current_statu",{"_index":941,"title":{},"body":{"classes/AddPost.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{}}}],["type=set_token",{"_index":960,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["type=sign_out_us",{"_index":955,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["type=user_upd",{"_index":958,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["typeahead",{"_index":584,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["typeahead.compon",{"_index":512,"title":{},"body":{"modules/TypeaheadComponentModule.html":{}}}],["typeahead.component.html",{"_index":703,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead.component.scss",{"_index":702,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead_rout",{"_index":513,"title":{},"body":{"modules/TypeaheadComponentModule.html":{}}}],["typeaheadcompon",{"_index":354,"title":{"components/TypeaheadComponent.html":{}},"body":{"overview.html":{},"modules/TypeaheadComponentModule.html":{},"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["typeaheadcomponentmodul",{"_index":355,"title":{"modules/TypeaheadComponentModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/TypeaheadComponentModule.html":{}}}],["typeaheadmodul",{"_index":468,"title":{},"body":{"modules/LayoutModule.html":{},"modules/PostModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["typeaheadmodule.forroot",{"_index":472,"title":{},"body":{"modules/LayoutModule.html":{},"modules/TypeaheadComponentModule.html":{}}}],["typealias",{"_index":1115,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typerefer",{"_index":1110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["types/dropzon",{"_index":25,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":118,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":220,"title":{},"body":{"index.html":{}}}],["under",{"_index":193,"title":{},"body":{"index.html":{}}}],["underscor",{"_index":552,"title":{},"body":{"components/AddUserComponent.html":{}}}],["unit",{"_index":162,"title":{},"body":{"index.html":{}}}],["upload",{"_index":280,"title":{},"body":{"index.html":{}}}],["us",{"_index":151,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["user",{"_index":222,"title":{},"body":{"index.html":{},"components/AddUserComponent.html":{},"components/ProfileComponent.html":{}}}],["user'},{'nam",{"_index":569,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["user.compon",{"_index":453,"title":{},"body":{"modules/LayoutModule.html":{}}}],["user.component.html",{"_index":525,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.scss",{"_index":523,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.t",{"_index":519,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:17",{"_index":534,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:20",{"_index":539,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:22",{"_index":544,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:23",{"_index":545,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":543,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":540,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user/add",{"_index":452,"title":{},"body":{"modules/LayoutModule.html":{},"components/AddUserComponent.html":{}}}],["user:ani",{"_index":558,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user_upd",{"_index":1036,"title":{},"body":{"classes/UserUpdated.html":{}}}],["user_updated='user_upd",{"_index":951,"title":{},"body":{"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["usernam",{"_index":527,"title":{},"body":{"components/AddUserComponent.html":{}}}],["userupd",{"_index":677,"title":{"classes/UserUpdated.html":{}},"body":{"components/ProfileComponent.html":{},"classes/AuthenticateUser.html":{},"classes/ForgotPassword.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["utah",{"_index":751,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["valid",{"_index":548,"title":{},"body":{"components/AddUserComponent.html":{}}}],["valu",{"_index":600,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"pipes/ContinuePipe.html":{},"classes/AddPost.html":{},"classes/AuthenticateUser.html":{},"classes/CreatePost.html":{},"classes/CreatePostSuccess.html":{},"classes/CreateTopic.html":{},"classes/CreateTopicSuccess.html":{},"classes/DeletePost.html":{},"classes/DeletePostSuccess.html":{},"classes/DragPost.html":{},"classes/DragPostSuccess.html":{},"classes/ForgotPassword.html":{},"classes/GetPosts.html":{},"classes/GetPostsError.html":{},"classes/GetPostsSuccess.html":{},"classes/SetCurrentPost.html":{},"classes/SetCurrentStatus.html":{},"classes/SetPosts.html":{},"classes/SetStatuses.html":{},"classes/SetToken.html":{},"classes/SignOutUser.html":{},"classes/UserUpdated.html":{}}}],["var",{"_index":550,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{},"injectables/CalendarResolveGuard.html":{},"injectables/KanbanResolveGuard.html":{},"injectables/LayoutResolveGuard.html":{},"injectables/PostViewResolveGuard.html":{},"interceptors/AuthInterceptor.html":{},"pipes/ContinuePipe.html":{},"interfaces/AppState.html":{},"interfaces/State.html":{}}}],["vermont",{"_index":752,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["via",{"_index":165,"title":{},"body":{"index.html":{}}}],["view",{"_index":239,"title":{},"body":{"index.html":{},"modules/LayoutModule.html":{},"injectables/PostViewResolveGuard.html":{}}}],["view'},{'nam",{"_index":580,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["view.compon",{"_index":497,"title":{},"body":{"modules/PostModule.html":{}}}],["view/post",{"_index":447,"title":{},"body":{"modules/LayoutModule.html":{},"modules/PostModule.html":{},"injectables/PostViewResolveGuard.html":{}}}],["virginia",{"_index":753,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["void",{"_index":542,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationTriggerComponent.html":{},"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["washington",{"_index":754,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["watch/unwatch",{"_index":252,"title":{},"body":{"index.html":{}}}],["watcher",{"_index":855,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["watchers:watch",{"_index":873,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["watchers=result",{"_index":867,"title":{},"body":{"injectables/PostViewResolveGuard.html":{}}}],["webpack",{"_index":182,"title":{},"body":{"index.html":{}}}],["west",{"_index":755,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["widget",{"_index":696,"title":{},"body":{"components/ProfileComponent.html":{},"components/TypeaheadComponent.html":{}}}],["window[this.container.storagestrategy].removeitem('auth_cod",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["window[this.container.storagestrategy].removeitem('authtoken",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["window[this.container.storagestrategy].removeitem('cypheredtoken",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["wisconsin",{"_index":756,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["wyom",{"_index":757,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["ye",{"_index":906,"title":{},"body":{"pipes/ContinuePipe.html":{}}}],["york",{"_index":738,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["zone.j",{"_index":120,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":356,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules/CoreModule.html":{},"modules/KanbanModule.html":{},"modules/LayoutModule.html":{},"modules/PagesModule.html":{},"modules/PostModule.html":{},"modules/ProfileModule.html":{},"modules/TypeaheadComponentModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n    Dependencies\n\n\n    \n        @angular/animations : ^5.2.4\n    \n        @angular/cli : ^1.6.8\n    \n        @angular/common : ^5.2.4\n    \n        @angular/compiler : ^5.2.4\n    \n        @angular/compiler-cli : ^5.2.4\n    \n        @angular/core : ^5.2.4\n    \n        @angular/flex-layout : ^2.0.0-beta.12\n    \n        @angular/forms : ^5.2.4\n    \n        @angular/http : ^5.2.4\n    \n        @angular/platform-browser : ^5.2.4\n    \n        @angular/platform-browser-dynamic : ^5.2.4\n    \n        @angular/platform-server : ^5.2.4\n    \n        @angular/router : ^5.2.4\n    \n        @ngrx/effects : ^5.1.0\n    \n        @ngrx/store : ^5.1.0\n    \n        @types/dropzone : ^5.0.1\n    \n        angular2-text-mask : ^8.0.4\n    \n        animate.css : ^3.5.2\n    \n        bootstrap : 4.0.0-beta\n    \n        bootstrap-colorpicker : ^2.5.2\n    \n        bootstrap-datetimepicker-npm : ^4.17.37-npm\n    \n        bootstrap-tagsinput : ^0.7.1\n    \n        core-js : ^2.4.1\n    \n        dropzone : ^5.1.1\n    \n        easy-pie-chart : ^2.1.7\n    \n        express : ^4.16.2\n    \n        flot : ^0.8.0-alpha\n    \n        font-awesome : ^4.7.0\n    \n        fullcalendar : ^3.8.0\n    \n        jquery : ^3.2.1\n    \n        jquery-sparkline : ^2.4.0\n    \n        jqvmap : ^1.5.1\n    \n        material-design-iconic-font : ^2.2.0\n    \n        moment : ^2.20.1\n    \n        ng-autosize : ^1.0.1\n    \n        ng-http-loader : ^0.7.0\n    \n        ng2-color-picker : ^1.3.2\n    \n        ng2-dragula : ^1.5.0\n    \n        ng2-fontawesome : 0.0.6\n    \n        ng2-img-fallback : ^0.2.3\n    \n        ng2-nouislider : ^1.7.0\n    \n        ng2-select2 : ^1.0.0-beta.10\n    \n        ng2-table : ^1.3.2\n    \n        ng2-toastr : ^4.1.2\n    \n        ng4-tag-input : ^1.0.5\n    \n        ngx-bootstrap : ^2.0.0-beta.6\n    \n        ngx-img-fallback : ^1.3.0\n    \n        nouislider : ^10.1.0\n    \n        popper.js : ^1.12.5\n    \n        rxjs : ^5.5.6\n    \n        select2 : ^4.0.4\n    \n        summernote : ^0.8.9\n    \n        sweetalert2 : ^7.7.0\n    \n        trumbowyg : ^2.9.4\n    \n        typescript : 2.4.2\n    \n        zone.js : ^0.8.14\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCalendarly\nSocial media content management portal.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nCompilers used\n\nThe project is compiled using webpack. \nGulp is used for temporary frontend tasks.\n\nProject Structure\n\nThe main app bundling module is contained in app folder under the name app.module.\n\nModule structure\nFeature modules:\n\nDashboard\nCalendar\nProfile\nPost\nCore\nLayout\n\nThe core module contains the major shared modules and re-exports them to be made available to all.\nShared modules such as header, sidebar, chat are contained in core module.\nLayout Module\n\nUsed for scaffolding the application's major routing logic.\nImports Core Module.\nContains the major layout components such as the header, sidebar, chatbar.\nContains the app's major routing module.\n\nCalendar Module\n\nOur app's default opening page.\nContains the fullCalendar.js(Jquery UI plugin) for the user to interact and add a post.\nProvides features such as 'Add a post', 'Edit Post'.\nContains an instance of createPost component for adding a post to the calendar.\nProvides a service 'CalendarService' to allow contain related to calendar which can then be injected into onther modules when required.\n\nPost Module (feature module)\n\nIt contains 2 components:\n\nCreate Post Component\nPost-View Component\n\n\nCreate Post Component:\n\nContains form which is shared in seveal other components.\nUsed to modularize the code.\nContains output property 'formSubmitted' and 'formUpdated' and input property 'postData'.\n\n\nPost View Component:\n\nContains instance of createPost which populates data when clicked on an existing calendarly post.\nUnder this component the user can:\nWatch/Unwatch a post.\nDelete the post.\nAdd Attatchments to the post.\nPost comments on the post.\n\n\n\n\n\nServices\n\nCalendar Service:\n\nContains factory methods related to the calendar and its operations.\nInjected centrally to make the instance avaiable to all the components.\n\n\nEvents Service:\n\nContains Rxjs subjects for cross component communication.\nHelps in centralizing the events related subjects,event emitters into one service.\n\n\n\nPipes\n\nContinue Pipe\nFor covering equal string sizes and mapping all the excess sized strings to a similar        string resembling ...mp4.It is mainly used for input files while uploading files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_imports\n\n\n\ncluster_CalendarModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_KanbanModule\n\n\n\ncluster_KanbanModule_declarations\n\n\n\ncluster_KanbanModule_imports\n\n\n\ncluster_KanbanModule_providers\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_providers\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_PostModule_exports\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_TypeaheadComponentModule\n\n\n\ncluster_TypeaheadComponentModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContinuePipe\n\nContinuePipe\n\nAppModule -->\n\nContinuePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nrouting\n\nrouting\n\nAppModule -->\n\nrouting->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nPostModule->CoreModule\n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nPostModule->LayoutModule\n\n\n\n\n\nCreatePostComponent \n\nCreatePostComponent \n\nCreatePostComponent  -->\n\nPostModule->CreatePostComponent \n\n\n\n\n\nPostViewComponent \n\nPostViewComponent \n\nPostViewComponent  -->\n\nPostModule->PostViewComponent \n\n\n\n\n\nCreateTopicComponent \n\nCreateTopicComponent \n\nCreateTopicComponent  -->\n\nPostModule->CreateTopicComponent \n\n\n\n\n\nSharedService\n\nSharedService\n\nAppModule -->\n\nSharedService->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\nCoreModule -->\n\nAuthInterceptor->CoreModule\n\n\n\n\n\nContainerService\n\nContainerService\n\nAppModule -->\n\nContainerService->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\nCalendarModule -->\n\nCoreModule->CalendarModule\n\n\n\n\n\nPostModule \n\nPostModule \n\nPostModule  -->\n\nCoreModule->PostModule \n\n\n\n\n\nKanbanModule\n\nKanbanModule\n\nKanbanModule -->\n\nCoreModule->KanbanModule\n\n\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nCoreModule->PagesModule\n\n\n\n\n\nCalendarRoutingModule\n\nCalendarRoutingModule\n\nCalendarModule -->\n\nCalendarRoutingModule->CalendarModule\n\n\n\n\n\nCalendarService\n\nCalendarService\n\nCalendarModule -->\n\nCalendarService->CalendarModule\n\n\n\nLayoutModule -->\n\nCalendarService->LayoutModule\n\n\n\n\n\nCalendarResolveGuard\n\nCalendarResolveGuard\n\nCalendarModule -->\n\nCalendarResolveGuard->CalendarModule\n\n\n\n\n\nKanbanComponent\n\nKanbanComponent\n\nKanbanModule -->\n\nKanbanComponent->KanbanModule\n\n\n\n\n\nKanbanRoutingModule\n\nKanbanRoutingModule\n\nKanbanModule -->\n\nKanbanRoutingModule->KanbanModule\n\n\n\n\n\nKanbanService\n\nKanbanService\n\nKanbanModule -->\n\nKanbanService->KanbanModule\n\n\n\n\n\nKanbanResolveGuard\n\nKanbanResolveGuard\n\nKanbanModule -->\n\nKanbanResolveGuard->KanbanModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nLayoutModule -->\n\nSearchComponent->LayoutModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nLayoutModule -->\n\nNavigationComponent->LayoutModule\n\n\n\n\n\nNavigationTriggerComponent\n\nNavigationTriggerComponent\n\nLayoutModule -->\n\nNavigationTriggerComponent->LayoutModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nLayoutModule -->\n\nAddUserComponent->LayoutModule\n\n\n\n\n\nLayoutRouting\n\nLayoutRouting\n\nLayoutModule -->\n\nLayoutRouting->LayoutModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nLayoutModule -->\n\nProfileModule->LayoutModule\n\n\n\n\n\nLayoutResolveGuard\n\nLayoutResolveGuard\n\nLayoutModule -->\n\nLayoutResolveGuard->LayoutModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nLayoutModule -->\n\nAuthGuard->LayoutModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nLayoutModule -->\n\nAuthService->LayoutModule\n\n\n\n\n\nPostViewResolveGuard\n\nPostViewResolveGuard\n\nLayoutModule -->\n\nPostViewResolveGuard->LayoutModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nPagesModule -->\n\nLoginComponent->PagesModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nPagesModule -->\n\nSignupComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nCreatePostComponent\n\nCreatePostComponent\n\nPostModule -->\n\nCreatePostComponent->PostModule\n\n\n\n\n\nPostViewComponent\n\nPostViewComponent\n\nPostModule -->\n\nPostViewComponent->PostModule\n\n\n\n\n\nCreateTopicComponent\n\nCreateTopicComponent\n\nPostModule -->\n\nCreateTopicComponent->PostModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nTypeaheadComponent\n\nTypeaheadComponent\n\n\n\nTypeaheadComponentModule\n\nTypeaheadComponentModule\n\nTypeaheadComponentModule -->\n\nTypeaheadComponent->TypeaheadComponentModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            12 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        26 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KanbanModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KanbanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeaheadComponentModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContinuePipe\n\nContinuePipe\n\nAppModule -->\n\nContinuePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nrouting\n\nrouting\n\nAppModule -->\n\nrouting->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nSharedService\n\nSharedService\n\nAppModule -->\n\nSharedService->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nContainerService\n\nContainerService\n\nAppModule -->\n\nContainerService->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ContinuePipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SharedService\n                            \n                            \n                                     AuthInterceptor\n                            \n                            \n                                     ContainerService\n                            \n                            \n                                     EventsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    routing\n                            \n                            \n                                    PostModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ContinuePipe } from './pipes/continue.pipe';\nimport { CalendarEffects } from './calendar/store/calendar.effects';\nimport { AppReducers } from './store/app.reducers';\nimport { SharedService } from './providers/shared.service';\nimport { AuthInterceptor } from './providers/interceptors/auth-interceptor.service';\nimport { PostModule } from './post/post.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { routing } from './app.routing';\nimport {ContainerService} from './providers/container.service';\nimport {EventsService} from './providers/events.service';\nimport { NgHttpLoaderModule } from 'ng-http-loader/ng-http-loader.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    routing,\n    PostModule,\n    NgHttpLoaderModule,\n    StoreModule.forRoot(AppReducers),\n    EffectsModule.forRoot([CalendarEffects])\n  ],\n  declarations: [\n    AppComponent,\n    ContinuePipe\n  ],\n  providers: [\n    SharedService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n    ContainerService,\n    EventsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n  Modules\n  CalendarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_imports\n\n\n\ncluster_CalendarModule_providers\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCalendarModule -->\n\nCoreModule->CalendarModule\n\n\n\n\n\nCalendarRoutingModule\n\nCalendarRoutingModule\n\nCalendarModule -->\n\nCalendarRoutingModule->CalendarModule\n\n\n\n\n\nCalendarService\n\nCalendarService\n\nCalendarModule -->\n\nCalendarService->CalendarModule\n\n\n\n\n\nCalendarResolveGuard\n\nCalendarResolveGuard\n\nCalendarModule -->\n\nCalendarResolveGuard->CalendarModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/calendar/calendar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CalendarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CalendarService\n                            \n                            \n                                     CalendarResolveGuard\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    CalendarRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { StoreModule } from '@ngrx/store';\nimport { CoreModule } from './../core/core.module';\nimport { CalendarResolveGuard } from './calendar-resolve.guard';\nimport { CalendarRoutes, CalendarRoutingModule } from './calendar.routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { PostModule } from './../post/post.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CalendarService } from './calendar.service';\nimport { CalendarComponent } from './calendar.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { reducer } from './store/calendar.reducer';\n\n\n@NgModule ({\n    declarations: [\n        CalendarComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        // StoreModule.forFeature('calendar',reducer),\n        CalendarRoutingModule\n    ],\n    providers:[CalendarService,CalendarResolveGuard],\n    exports:[]\n})\n\nexport class CalendarModule {  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarRoutingModule.html":{"url":"modules/CalendarRoutingModule.html","title":"module - CalendarRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  CalendarRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/calendar/calendar.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CalendarComponent } from './calendar.component';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nexport const CalendarRoutes:Routes=[\n    {\n        path: '',\n        component: CalendarComponent\n    }\n]\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(CalendarRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\n  export class CalendarRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nPostModule\n\nPostModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nPostModule->CoreModule\n\n\n\n\n\nPostModule \n\nPostModule \n\nPostModule  -->\n\nCoreModule->PostModule \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nCoreModule -->\n\nAuthInterceptor->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    PostModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PostModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DragulaModule } from 'ng2-dragula';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PostModule } from './../post/post.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AuthInterceptor } from './../providers/interceptors/auth-interceptor.service';\nimport { NgHttpLoaderModule } from 'ng-http-loader/ng-http-loader.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ModalModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    PostModule,\n    BsDropdownModule.forRoot(),\n    DragulaModule\n  ],\n  declarations: [],\n  providers:[ {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true,\n  }],\n  exports:[HttpClientModule,ModalModule,PostModule,BsDropdownModule,DragulaModule]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KanbanModule.html":{"url":"modules/KanbanModule.html","title":"module - KanbanModule","body":"\n                   \n\n\n\n\n  Modules\n  KanbanModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KanbanModule\n\n\n\ncluster_KanbanModule_declarations\n\n\n\ncluster_KanbanModule_imports\n\n\n\ncluster_KanbanModule_providers\n\n\n\n\nKanbanComponent\n\nKanbanComponent\n\n\n\nKanbanModule\n\nKanbanModule\n\nKanbanModule -->\n\nKanbanComponent->KanbanModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nKanbanModule -->\n\nCoreModule->KanbanModule\n\n\n\n\n\nKanbanRoutingModule\n\nKanbanRoutingModule\n\nKanbanModule -->\n\nKanbanRoutingModule->KanbanModule\n\n\n\n\n\nKanbanService\n\nKanbanService\n\nKanbanModule -->\n\nKanbanService->KanbanModule\n\n\n\n\n\nKanbanResolveGuard\n\nKanbanResolveGuard\n\nKanbanModule -->\n\nKanbanResolveGuard->KanbanModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/kanban/kanban.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                KanbanComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     KanbanService\n                            \n                            \n                                     KanbanResolveGuard\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    KanbanRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { Ng2ImgFallbackModule } from 'ng2-img-fallback';\nimport { CoreModule } from './../core/core.module';\nimport { KanbanResolveGuard } from './kanban-resolve.guard';\nimport { KanbanRoutes, KanbanRoutingModule } from './kanban.routing.module';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { KanbanService } from './kanban.service';\nimport { KanbanComponent } from './kanban.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {DragulaModule} from 'ng2-dragula';\n\n\n@NgModule ({\n    declarations: [\n        KanbanComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        Ng2ImgFallbackModule,\n        // BsDropdownModule.forRoot(),\n        // FormsModule,\n        // DragulaModule,\n        KanbanRoutingModule\n    ],\n    providers:[KanbanService,KanbanResolveGuard],\n    exports:[]\n})\n\nexport class KanbanModule {  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KanbanRoutingModule.html":{"url":"modules/KanbanRoutingModule.html","title":"module - KanbanRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  KanbanRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/kanban/kanban.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { KanbanComponent } from './kanban.component';\n\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nexport const KanbanRoutes:Routes=[\n    {\n        path: '',\n        component: KanbanComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(KanbanRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\n  export class KanbanRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_providers\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutModule -->\n\nHeaderComponent->LayoutModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nLayoutModule -->\n\nSearchComponent->LayoutModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nLayoutModule -->\n\nNavigationComponent->LayoutModule\n\n\n\n\n\nNavigationTriggerComponent\n\nNavigationTriggerComponent\n\nLayoutModule -->\n\nNavigationTriggerComponent->LayoutModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nLayoutModule -->\n\nAddUserComponent->LayoutModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nLayoutModule -->\n\nCoreModule->LayoutModule\n\n\n\n\n\nLayoutRouting\n\nLayoutRouting\n\nLayoutModule -->\n\nLayoutRouting->LayoutModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nLayoutModule -->\n\nProfileModule->LayoutModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nLayoutModule -->\n\nPostModule->LayoutModule\n\n\n\n\n\nCalendarService\n\nCalendarService\n\nLayoutModule -->\n\nCalendarService->LayoutModule\n\n\n\n\n\nLayoutResolveGuard\n\nLayoutResolveGuard\n\nLayoutModule -->\n\nLayoutResolveGuard->LayoutModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nLayoutModule -->\n\nAuthGuard->LayoutModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nLayoutModule -->\n\nAuthService->LayoutModule\n\n\n\n\n\nPostViewResolveGuard\n\nPostViewResolveGuard\n\nLayoutModule -->\n\nPostViewResolveGuard->LayoutModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layout/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LayoutComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                SearchComponent\n                            \n                            \n                                NavigationComponent\n                            \n                            \n                                NavigationTriggerComponent\n                            \n                            \n                                AddUserComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CalendarService\n                            \n                            \n                                     LayoutResolveGuard\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                            \n                                     PostViewResolveGuard\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    LayoutRouting\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    PostModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { PostViewResolveGuard } from './../post/post-view/post-view-resolve.guard';\nimport { AuthInterceptor } from './../providers/interceptors/auth-interceptor.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './../providers/auth.service';\nimport { AuthGuard } from './../providers/auth.guard';\nimport { CalendarService } from './../calendar/calendar.service';\nimport { AddUserComponent } from './../components/add-user/add-user.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PostModule } from './../post/post.module';\nimport { ProfileModule } from './../profile/profile.module';\nimport { ProfileComponent } from './../profile/profile.component';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgModule } from \"@angular/core\";\nimport { LayoutRouting } from \"./layout.routing\";\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { ButtonsModule, TooltipModule } from 'ngx-bootstrap';\nimport { LayoutComponent } from \"./layout.component\";\nimport { HeaderComponent } from './header/header.component';\nimport { SearchComponent } from './header/search/search.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NavigationTriggerComponent } from './header/navigation-trigger/navigation-trigger.component';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\nimport { LayoutResolveGuard } from './layout-resolve.guard';\nimport { CoreModule } from '../core/core.module';\n\n@NgModule ({\n  declarations: [\n    LayoutComponent,\n    HeaderComponent,\n    SearchComponent,\n    NavigationComponent,\n    NavigationTriggerComponent,\n    AddUserComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    LayoutRouting,\n    FormsModule,\n    BsDropdownModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    ButtonsModule.forRoot(),\n    ProfileModule,\n    PostModule,\n    ModalModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    TooltipModule.forRoot()\n  ],\n  providers:[CalendarService,LayoutResolveGuard,AuthGuard,AuthService,PostViewResolveGuard]\n})\n\nexport class LayoutModule {  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n  Modules\n  PagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nLoginComponent->PagesModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nPagesModule -->\n\nSignupComponent->PagesModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nPagesModule -->\n\nCoreModule->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CoreModule\n                            \n                            \n                                    PagesRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CoreModule } from './../core/core.module';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { PagesRoutingModule } from './pages.routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule ({\n    declarations: [\n        LoginComponent,\n        SignupComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        PagesRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ModalModule.forRoot()\n    ]\n})\n\nexport class PagesModule {  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst PagesRoutes: Routes = [\n    {\n        path: '', \n        children: [\n            {\n                path: 'login', \n                component:LoginComponent\n            },\n            {\n                path: 'signup', \n                component:SignupComponent\n            },   \n    ]\n    }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(PagesRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\n  export class PagesRoutingModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n  Modules\n  PostModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_PostModule_exports\n\n\n\ncluster_PostModule_providers\n\n\n\n\nCreatePostComponent\n\nCreatePostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nCreatePostComponent->PostModule\n\n\n\n\n\nPostViewComponent\n\nPostViewComponent\n\nPostModule -->\n\nPostViewComponent->PostModule\n\n\n\n\n\nCreateTopicComponent\n\nCreateTopicComponent\n\nPostModule -->\n\nCreateTopicComponent->PostModule\n\n\n\n\n\nCreatePostComponent \n\nCreatePostComponent \n\nCreatePostComponent  -->\n\nPostModule->CreatePostComponent \n\n\n\n\n\nPostViewComponent \n\nPostViewComponent \n\nPostViewComponent  -->\n\nPostModule->PostViewComponent \n\n\n\n\n\nCreateTopicComponent \n\nCreateTopicComponent \n\nCreateTopicComponent  -->\n\nPostModule->CreateTopicComponent \n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/post/post.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CreatePostComponent\n                            \n                            \n                                PostViewComponent\n                            \n                            \n                                CreateTopicComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PostService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CreatePostComponent\n                            \n                            \n                                    PostViewComponent\n                            \n                            \n                                    CreateTopicComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { PostRoutes } from './post.routing.module';\nimport { RouterModule } from '@angular/router';\nimport { CreateTopicComponent } from './create-topic/create-topic.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { Ng2ImgFallbackModule } from 'ng2-img-fallback';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { PostService } from './post.service';\nimport { PostViewComponent } from './post-view/post-view.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    Ng2ImgFallbackModule,\n    BsDropdownModule.forRoot(),\n    TextMaskModule,\n    TypeaheadModule\n  ],\n  declarations: [CreatePostComponent,PostViewComponent,CreateTopicComponent],\n  exports:[CreatePostComponent,PostViewComponent,CreateTopicComponent],\n  providers:[PostService]\n})\nexport class PostModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nProfileComponent\n\nProfileComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ProfileComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ProfileComponent } from './profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n// import { ImgFallbackModule } from 'ngx-img-fallback';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [ProfileComponent],\n  exports:[],\n  providers:[]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeaheadComponentModule.html":{"url":"modules/TypeaheadComponentModule.html","title":"module - TypeaheadComponentModule","body":"\n                   \n\n\n\n\n  Modules\n  TypeaheadComponentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeaheadComponentModule\n\n\n\ncluster_TypeaheadComponentModule_declarations\n\n\n\n\nTypeaheadComponent\n\nTypeaheadComponent\n\n\n\nTypeaheadComponentModule\n\nTypeaheadComponentModule\n\nTypeaheadComponentModule -->\n\nTypeaheadComponent->TypeaheadComponentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/typeahead/typeahead.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TypeaheadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\n\nimport { TypeaheadComponent } from \"./typeahead.component\";\n\nconst TYPEAHEAD_ROUTES = [\n    { path: '', component: TypeaheadComponent }\n]\n\n@NgModule ({\n    declarations: [\n        TypeaheadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        BsDropdownModule.forRoot(),\n        TypeaheadModule.forRoot(),\n        RouterModule.forChild(TYPEAHEAD_ROUTES)\n    ]\n})\n\nexport class TypeaheadComponentModule {  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/add-user/add-user.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                add-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMember\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(fb: FormBuilder, container: ContainerService, calendarService: CalendarService)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/add-user/add-user.component.ts:17\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        fb\n                                                      \n                                                            \n                                                                        FormBuilder\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        container\n                                                      \n                                                            \n                                                                        ContainerService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        calendarService\n                                                      \n                                                            \n                                                                        CalendarService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            roles\n                        \n                        \n                        \n                    \n                            \n                                \n                                        Defined in src/app/components/add-user/add-user.component.ts:20\n                                \n                            \n                \n            \n    \n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                addMember\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    addMember()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/components/add-user/add-user.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/components/add-user/add-user.component.ts:24\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                role\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            role:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in src/app/components/add-user/add-user.component.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                username\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            username:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in src/app/components/add-user/add-user.component.ts:23\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { ContainerService } from './../../providers/container.service';\nimport { Router } from '@angular/router';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\ndeclare var $:any;\nimport * as moment from 'moment';\nimport * as _ from 'underscore';\nimport { CalendarService } from '../../calendar/calendar.service';\ndeclare var swal:any;\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent  {\n\n  constructor(private fb:FormBuilder,private container:ContainerService,private calendarService:CalendarService) { }\n  @Input() roles;\n  // user:any={};\n  role;\n  username;\n  ngOnInit()\n  {}  \n\n  addMember()\n  {\n    // this.user.role=Number(this.user.role)\n    console.log(this.role)\n    console.log(this.username)\n      this.calendarService.addMember({project:this.container.projectId,role:this.role,username:this.username}).subscribe(res=>{\n        console.log(res)\n      })\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n\n    \n        \n        {{role.name}}\n\n      \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{role.name}}          '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CreatePostComponent', 'selector': 'app-create-post'},{'name': 'CreateTopicComponent', 'selector': 'app-create-topic'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'KanbanComponent', 'selector': 'app-kanban'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NavigationTriggerComponent', 'selector': 'navigation-trigger'},{'name': 'PostViewComponent', 'selector': 'app-post-view'},{'name': 'ProfileComponent', 'selector': 'profile1'},{'name': 'SearchComponent', 'selector': 'header-search'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                spinkit\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exitUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showLoader\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(eventsService: EventsService, sharedService: SharedService, router: Router, container: ContainerService)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/app.component.ts:19\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        eventsService\n                                                      \n                                                            \n                                                                        EventsService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        sharedService\n                                                      \n                                                            \n                                                                        SharedService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        router\n                                                      \n                                                            \n                                                                        Router\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        container\n                                                      \n                                                            \n                                                                        ContainerService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                exitUser\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    exitUser()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/app.component.ts:49\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/app.component.ts:23\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                showLoader\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    showLoader()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/app.component.ts:29\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                loading\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            loading:     \n    \n                        \n                    \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                        Defined in src/app/app.component.ts:48\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                spinkit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            spinkit:     \n    \n                        \n                    \n                        \n                            \n                                Default value : Spinkit\n                            \n                        \n                            \n                                \n                                        Defined in src/app/app.component.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                title\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'app'\n                            \n                        \n                            \n                                \n                                        Defined in src/app/app.component.ts:19\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { SharedService } from './providers/shared.service';\n// import { SharedService } from \"./shared/services/shared.service\";\nimport { Router,NavigationStart,NavigationEnd } from '@angular/router';\nimport { Component, state } from '@angular/core';\nimport { EventsService } from './providers/events.service';\nimport { ContainerService } from './providers/container.service';\nimport { RouteConfigLoadStart, RouteConfigLoadEnd } from \"@angular/router\";\nimport { Spinkit } from 'ng-http-loader/spinkits';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls:['./app.component.scss']\n})\n\nexport class AppComponent {\n   spinkit = Spinkit;\n  title = 'app';\n\n  constructor(private eventsService:EventsService,private sharedService:SharedService,private router:Router,private container:ContainerService){}\n\n  ngOnInit() {\n    this.exitUser();\n    this.showLoader();\n    \n  }\n\n  showLoader()\n  {\n    this.router.events.subscribe(e=>{\n      if(e instanceof NavigationStart)\n      {\n        // this.loading=true;\n      }\n      if(e instanceof NavigationEnd)\n      {\n        // this.loading=false;\n        this.sharedService.sidebarVisibilitySubject.next(false);\n      }\n    })\n\n    // this.eventsService.showLoader.subscribe(show=>{\n    //   this.loading=show;\n    // })\n  }\n\n  loading=false;\n  exitUser()\n  {\n    this.eventsService.exitUser.subscribe(()=>{\n      this.router.navigate(['/','pages','login']);\n      window[this.container.storageStrategy].removeItem('cypheredToken')\n      window[this.container.storageStrategy].removeItem('authToken');\n      window[this.container.storageStrategy].removeItem('auth_code')\n      this.sharedService.notify('You were logged out')\n    })\n  }\n\n}\n\n\n    \n\n    \n        \n\n    \n        \n      \n    \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CreatePostComponent', 'selector': 'app-create-post'},{'name': 'CreateTopicComponent', 'selector': 'app-create-topic'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'KanbanComponent', 'selector': 'app-kanban'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NavigationTriggerComponent', 'selector': 'navigation-trigger'},{'name': 'PostViewComponent', 'selector': 'app-post-view'},{'name': 'ProfileComponent', 'selector': 'profile1'},{'name': 'SearchComponent', 'selector': 'header-search'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                style.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideBtn\n                            \n                            \n                                maTheme\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goback\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(sharedService: SharedService, router: Router, container: ContainerService, route: ActivatedRoute)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/layout/layout.component.ts:12\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        sharedService\n                                                      \n                                                            \n                                                                        SharedService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        router\n                                                      \n                                                            \n                                                                        Router\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        container\n                                                      \n                                                            \n                                                                        ContainerService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        route\n                                                      \n                                                            \n                                                                        ActivatedRoute\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                goback\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    goback()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/layout/layout.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/layout/layout.component.ts:21\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                hideBtn\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            hideBtn:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in src/app/layout/layout.component.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                maTheme\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            maTheme:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : this.sharedService.maTheme\n                            \n                        \n                            \n                                \n                                        Defined in src/app/layout/layout.component.ts:12\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Router, ActivatedRoute } from '@angular/router';\nimport { ContainerService } from './../providers/container.service';\nimport { SharedService } from '../providers/shared.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls:['./style.scss']\n})\nexport class LayoutComponent implements OnInit {\n  maTheme: string = this.sharedService.maTheme;\n\n  constructor(private sharedService: SharedService,private router:Router,private container:ContainerService,\n  private route:ActivatedRoute) {\n    sharedService.maThemeSubject.subscribe((value) => {\n      this.maTheme = value\n    })\n  }\n\n  ngOnInit() {\n    // this.route..subscribe(url=>{\n    //   console.log(url,'url')\n    // })\n  }\n  hideBtn;\n  goback()\n  {\n    this.router.navigate(['../'])\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n        \n\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CreatePostComponent', 'selector': 'app-create-post'},{'name': 'CreateTopicComponent', 'selector': 'app-create-topic'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'KanbanComponent', 'selector': 'app-kanban'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NavigationTriggerComponent', 'selector': 'navigation-trigger'},{'name': 'PostViewComponent', 'selector': 'app-post-view'},{'name': 'ProfileComponent', 'selector': 'profile1'},{'name': 'SearchComponent', 'selector': 'header-search'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationTriggerComponent.html":{"url":"components/NavigationTriggerComponent.html","title":"component - NavigationTriggerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationTriggerComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/layout/header/navigation-trigger/navigation-trigger.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navigation-trigger\n            \n\n            \n                styleUrls\n                navigation-trigger.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation-trigger.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidebarVisible\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidebarVisibility\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(sharedService: SharedService)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/layout/header/navigation-trigger/navigation-trigger.component.ts:10\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        sharedService\n                                                      \n                                                            \n                                                                        SharedService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/layout/header/navigation-trigger/navigation-trigger.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toggleSidebarVisibility\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    toggleSidebarVisibility()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/layout/header/navigation-trigger/navigation-trigger.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                sidebarVisible\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            sidebarVisible:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                            \n                                \n                                        Defined in src/app/layout/header/navigation-trigger/navigation-trigger.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { SharedService } from './../../../providers/shared.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'navigation-trigger',\n    templateUrl: './navigation-trigger.component.html',\n    styleUrls: ['./navigation-trigger.component.scss'],\n})\nexport class NavigationTriggerComponent implements OnInit {\n    sidebarVisible: boolean;\n\n    constructor(private sharedService: SharedService) {\n        sharedService.sidebarVisibilitySubject.subscribe((value) => {\n            this.sidebarVisible = value\n        })\n    }\n\n    toggleSidebarVisibility() {\n        this.sharedService.toggleSidebarVisibilty()\n    }\n\n    ngOnInit() {\n\n    }\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CreatePostComponent', 'selector': 'app-create-post'},{'name': 'CreateTopicComponent', 'selector': 'app-create-topic'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'KanbanComponent', 'selector': 'app-kanban'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NavigationTriggerComponent', 'selector': 'navigation-trigger'},{'name': 'PostViewComponent', 'selector': 'app-post-view'},{'name': 'ProfileComponent', 'selector': 'profile1'},{'name': 'SearchComponent', 'selector': 'header-search'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationTriggerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile1\n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                images\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                userUpdated\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(eventsService: EventsService, container: ContainerService, store: Store)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/profile/profile.component.ts:14\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        eventsService\n                                                      \n                                                            \n                                                                        EventsService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        container\n                                                      \n                                                            \n                                                                        ContainerService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        store\n                                                      \n                                                            \n                                                                        Store\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/profile/profile.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                userUpdated\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    userUpdated()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/profile/profile.component.ts:23\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                data\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            data:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n                        \n                            \n                                Default value : []\n                            \n                        \n                            \n                                \n                                        Defined in src/app/profile/profile.component.ts:17\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                images\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            images:     \n    \n                        \n                    \n                        \n                            \n                                Default value : config.images\n                            \n                        \n                            \n                                \n                                        Defined in src/app/profile/profile.component.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                user\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            user:     \n    \n                        \n                    \n                            \n                                \n                                        Defined in src/app/profile/profile.component.ts:22\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { ContainerService } from './../providers/container.service';\nimport { EventsService } from './../providers/events.service';\nimport { config } from './../providers/config';\nimport { AppState } from './../store/app.reducers';\nimport { Store } from '@ngrx/store';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'profile1',\n  templateUrl: './profile.component.html'\n})\n\nexport class ProfileComponent implements OnInit {\n  images=config.images;\n  constructor(private eventsService:EventsService,private container:ContainerService,\n  private store:Store) { }\n  data=[];\n  ngOnInit() {\n    this.user=this.container.user;\n    this.userUpdated();\n  }\n  user;\n  userUpdated()\n  {\n    this.store.select('main').subscribe(state=>{\n      this.user=state.user;\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n\n             -->\n            \n                \n                    \n                        \n                            \n                                \n                                    \n\n                                    Malinda Hollway\n                                \n\n                                \n                                    \n                                        \n                                        \n                                            Refresh\n                                                    Manage Widgets\n                                                    Settings -->\n                                        \n                                    \n                                \n                            \n\n                            \n                                \n                                    Contact\n                                    \n                                         assignment-alert\n                                        \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                \n\n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     -->                                                                                                                                                                                                            Malinda Hollway                                                                                                                                                                                                                                Refresh                                                    Manage Widgets                                                    Settings -->                                                                                                                                                                                                                                        Contact                                                                             assignment-alert                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CreatePostComponent', 'selector': 'app-create-post'},{'name': 'CreateTopicComponent', 'selector': 'app-create-topic'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'KanbanComponent', 'selector': 'app-kanban'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NavigationTriggerComponent', 'selector': 'navigation-trigger'},{'name': 'PostViewComponent', 'selector': 'app-post-view'},{'name': 'ProfileComponent', 'selector': 'profile1'},{'name': 'SearchComponent', 'selector': 'header-search'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeaheadComponent.html":{"url":"components/TypeaheadComponent.html","title":"component - TypeaheadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeaheadComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/components/typeahead/typeahead.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-typeahead\n            \n\n            \n                styleUrls\n                typeahead.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./typeahead.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                            \n                                states\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:10\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                        Defined in src/app/components/typeahead/typeahead.component.ts:14\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                selected\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            selected:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                        Defined in src/app/components/typeahead/typeahead.component.ts:9\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                states\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            states:     string[]\n    \n                        \n                    \n                        \n                            \n                                Type :     string[]\n    \n                            \n                        \n                        \n                            \n                                Default value : ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n                            \n                        \n                            \n                                \n                                        Defined in src/app/components/typeahead/typeahead.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-typeahead',\n  templateUrl: './typeahead.component.html',\n  styleUrls: ['./typeahead.component.scss']\n})\nexport class TypeaheadComponent implements OnInit {\n  selected:string;\n  states:string[] = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        Typeahead\n        Provides a strong foundation for building robust typeaheads.\n\n        \n            \n            \n            \n                \n                \n                    Refresh\n                    Manage Widgets\n                    Settings\n                \n            \n        \n    \n\n    \n        \n            \n                \n                    Static array\n\n                    \n                        \n                        \n                    \n\n                    Model: {{selected | json}}\n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Typeahead        Provides a strong foundation for building robust typeaheads.                                                                                                Refresh                    Manage Widgets                    Settings                                                                                                    Static array                                                                                                            Model: {{selected | json}}                                        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CreatePostComponent', 'selector': 'app-create-post'},{'name': 'CreateTopicComponent', 'selector': 'app-create-topic'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'KanbanComponent', 'selector': 'app-kanban'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'NavigationTriggerComponent', 'selector': 'navigation-trigger'},{'name': 'PostViewComponent', 'selector': 'app-post-view'},{'name': 'ProfileComponent', 'selector': 'profile1'},{'name': 'SearchComponent', 'selector': 'header-search'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeaheadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/auth.guard.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        canActivate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(container: ContainerService, authService: AuthService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/providers/auth.guard.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                container\n                                                              \n                                                                    \n                                                                                ContainerService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                authService\n                                                              \n                                                                    \n                                                                                AuthService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        canActivate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/providers/auth.guard.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                next\n                                                                \n                                                                    \n                                                                                ActivatedRouteSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                state\n                                                                \n                                                                    \n                                                                                RouterStateSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable | Promise | boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { AuthService } from './auth.service';\nimport { ContainerService } from './container.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private container:ContainerService,private authService:AuthService){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n      console.log(state)\n      return Observable.create(observer=>{\n        this.authService.getToken().subscribe(res=>{\n        console.log(res)\n        observer.next(true);\n        observer.complete();\n      },er=>{\n        this.authService.handleError(er);\n        observer.next(false);\n        observer.complete();\n      })\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarResolveGuard.html":{"url":"injectables/CalendarResolveGuard.html","title":"injectable - CalendarResolveGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CalendarResolveGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/calendar-resolve.guard.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(postService: PostService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/calendar-resolve.guard.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                postService\n                                                              \n                                                                    \n                                                                                PostService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/calendar/calendar-resolve.guard.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                route\n                                                                \n                                                                    \n                                                                                ActivatedRouteSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                state\n                                                                \n                                                                    \n                                                                                RouterStateSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { PostService } from './../post/post.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\n@Injectable()\nexport class CalendarResolveGuard implements Resolve {\n  constructor(private postService:PostService){}\n \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log('hello')\n    var observables=[];\n    observables[0]=this.postService.getPosts()\n    observables[1]=this.postService.getCustomAttributes();\n\n    return forkJoin([...observables]).map(results=>{\n      return {\n        posts:results[0],\n        customAttributes:results[1]\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KanbanResolveGuard.html":{"url":"injectables/KanbanResolveGuard.html","title":"injectable - KanbanResolveGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KanbanResolveGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/kanban/kanban-resolve.guard.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(sharedService: SharedService, container: ContainerService, store: Store)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/kanban/kanban-resolve.guard.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                sharedService\n                                                              \n                                                                    \n                                                                                SharedService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                container\n                                                              \n                                                                    \n                                                                                ContainerService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                store\n                                                              \n                                                                    \n                                                                                Store\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/kanban/kanban-resolve.guard.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                route\n                                                                \n                                                                    \n                                                                                ActivatedRouteSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                state\n                                                                \n                                                                    \n                                                                                RouterStateSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import * as CalendarActions from './../calendar/store/calendar.actions';\nimport { Store } from '@ngrx/store';\nimport { ContainerService } from './../providers/container.service';\nimport { SharedService } from './../providers/shared.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { catchError } from 'rxjs/operators';\nimport { AppState } from '../store/app.reducers';\n@Injectable()\nexport class KanbanResolveGuard implements Resolve {\n  constructor(private sharedService:SharedService,private container:ContainerService,\nprivate store:Store){}\n \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log('hello111')\n    var observables=[];\n\n    observables[0]=this.sharedService.getPostStatuses().map((res:any[])=>res.filter(item=>item.project===this.container.projectId))\n\n    return forkJoin(observables).map((results:any[])=>{\n        var statuses=results[0];\n        this.container.statuses=statuses;\n            var posts=this.container.posts.slice();\n            statuses.forEach(o=>{\n                o.data=[];\n                posts.forEach(p=>{\n                    if(p.status===o.id)\n                    {\n                        o.data.push(p);\n                    }\n                })\n            })\n            this.store.dispatch(new CalendarActions.SetStatuses(statuses));\n            return {data:statuses};\n    })\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KanbanService.html":{"url":"injectables/KanbanService.html","title":"injectable - KanbanService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KanbanService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/kanban/kanban.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        editBoard\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(http: HttpClient, sharedService: SharedService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/kanban/kanban.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                http\n                                                              \n                                                                    \n                                                                                HttpClient\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                sharedService\n                                                              \n                                                                    \n                                                                                SharedService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        editBoard\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            editBoard(id: , data: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/kanban/kanban.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                id\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                data\n                                                                \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { SharedService } from './../providers/shared.service';\nimport { config } from './../providers/config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\nimport { catchError } from 'rxjs/operators/catchError';\n@Injectable()\nexport class KanbanService {\n\n  constructor(private http:HttpClient,\n  private sharedService:SharedService) { }\n\n    editBoard(id,data)\n    {\n      return this.http.patch(config.url+'/api/v1/userstories/'+id,data)\n      .pipe(catchError(this.sharedService.handleError));\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutResolveGuard.html":{"url":"injectables/LayoutResolveGuard.html","title":"injectable - LayoutResolveGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LayoutResolveGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/layout-resolve.guard.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(postService: PostService, container: ContainerService, sharedService: SharedService, store: Store)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/layout/layout-resolve.guard.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                postService\n                                                              \n                                                                    \n                                                                                PostService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                container\n                                                              \n                                                                    \n                                                                                ContainerService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                sharedService\n                                                              \n                                                                    \n                                                                                SharedService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                store\n                                                              \n                                                                    \n                                                                                Store\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/layout/layout-resolve.guard.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                route\n                                                                \n                                                                    \n                                                                                ActivatedRouteSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                state\n                                                                \n                                                                    \n                                                                                RouterStateSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import * as CalendarActions from './../calendar/store/calendar.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './../store/app.reducers';\nimport { SharedService } from './../providers/shared.service';\nimport { ContainerService } from './../providers/container.service';\nimport { PostService } from './../post/post.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\n@Injectable()\nexport class LayoutResolveGuard implements Resolve {\n  constructor(private postService:PostService,private container:ContainerService,\n  private sharedService:SharedService,private store:Store){}\n \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log('hello')\n    var observables=[];\n    observables[0]=this.postService.getPosts()\n    observables[1]=this.postService.getCustomAttributes();\n    observables[2]=this.sharedService.getPostStatuses();\n    return forkJoin([...observables]).map((results:any[])=>{\n      console.log(results)\n      var posts=results[0];\n      var statuses=results[2];\n      statuses.forEach(o=>{\n          o.data=[];\n          posts.forEach(p=>{\n              if(p.status===o.id)\n              {\n                  o.data.push(p);\n              }\n          })\n      })\n      this.store.dispatch(new CalendarActions.SetStatuses(statuses));\n      this.store.dispatch(new CalendarActions.SetPosts(posts));\n      \n      this.container.customAttributes=results[1];\n      return {\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostViewResolveGuard.html":{"url":"injectables/PostViewResolveGuard.html","title":"injectable - PostViewResolveGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PostViewResolveGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post/post-view/post-view-resolve.guard.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(postService: PostService, sharedService: SharedService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/post/post-view/post-view-resolve.guard.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                postService\n                                                              \n                                                                    \n                                                                                PostService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                sharedService\n                                                              \n                                                                    \n                                                                                SharedService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/post/post-view/post-view-resolve.guard.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                route\n                                                                \n                                                                    \n                                                                                ActivatedRouteSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                state\n                                                                \n                                                                    \n                                                                                RouterStateSnapshot\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { SharedService } from '../../providers/shared.service';\nimport { PostService } from '../../post/post.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\n@Injectable()\nexport class PostViewResolveGuard implements Resolve {\n  constructor(private postService:PostService,private sharedService:SharedService){}\n \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    console.log('hello',route)\n    var observables=[];\n    var watchers=[];\n    var postId=route.params.id;\n    var post;\n    var comments;\n   return this.postService.getPost(postId)\n  .mergeMap(p=>{\n       console.log(p)\n       post=p;\n       p.watchers.forEach(id=>{\n        observables.push(this.sharedService.getUserDetails(id))\n      })\n      if(observables.length)\n      {\n        return forkJoin(observables);\n      }\n      else{\n         return Observable.create(observer=>observer.next([]))\n      }\n   }).mergeMap((results:any[])=>{\n    watchers=results;\n    return this.postService.getComments(post.id)\n   }).map(c=>{\n       comments=c;\n       return {\n           data:{\n               post:post,\n               comments:comments,\n               watchers:watchers\n           }\n       }\n   })\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/providers/interceptors/auth-interceptor.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        intercept\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(container: ContainerService, router: Router)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/providers/interceptors/auth-interceptor.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                container\n                                                              \n                                                                    \n                                                                                ContainerService\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                            \n                                                                router\n                                                              \n                                                                    \n                                                                                Router\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        intercept\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            intercept(req: HttpRequest, next: HttpHandler)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/providers/interceptors/auth-interceptor.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                req\n                                                                \n                                                                    \n                                                                                HttpRequest\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                next\n                                                                \n                                                                    \n                                                                                HttpHandler\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { ContainerService } from './../container.service';\nimport { EventsService } from './../events.service';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport {HttpEvent,HttpClient,HttpErrorResponse, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\nimport 'rxjs/add/operator/do';\n\n\n@Injectable()\nexport class AuthInterceptor  implements HttpInterceptor {\n  constructor(private container:ContainerService,private router:Router){};\n  intercept(req: HttpRequest, next: HttpHandler) {\n    let authReq;\n    var token\n   \n      if(this.container.authHeader==='Application')\n      {\n        token=window[this.container.storageStrategy].getItem('cypheredToken');\n      }\n      else if(this.container.authHeader==='Bearer'){\n         token=window[this.container.storageStrategy].getItem('authToken');\n      }\n      if(token)\n      {\n        authReq = req.clone({headers: req.headers.set('Authorization', `${this.container.authHeader} ${token}`)});      \n      }\n      else{\n        authReq=req.clone()\n      }\n  \n    return next.handle(authReq)\n\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ContinuePipe.html":{"url":"pipes/ContinuePipe.html","title":"pipe - ContinuePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  ContinuePipe\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/continue.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        continue\n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        transform\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            transform(value: string, args?: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                                Defined in src/app/pipes/continue.pipe.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                value\n                                                                \n                                                                    \n                                                                                string\n                                                                    \n                                                                \n                                                                \n                                                                        no\n                                                                \n                                                                \n            \n                                                            \n                                                            \n                                                                args\n                                                                \n                                                                    \n                                                                                any\n                                                                    \n                                                                \n                                                                \n                                                                        yes\n                                                                \n                                                                \n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'continue'\n})\nexport class ContinuePipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n    var str:string;\n    if(value.length>=25)\n    {\n      str=value.slice(0,20)+'...'+value.slice(value.length-4,value.length)\n    }\n\n    return str;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddPost.html":{"url":"classes/AddPost.html","title":"class - AddPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddPost\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/kanban/store/kanban-actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/kanban/store/kanban-actions.ts:11\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/kanban/store/kanban-actions.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : ADD_POST\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/kanban/store/kanban-actions.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POST='ADD_POST';\nexport const DELETE_POST='DELETE_POST';\nexport const DRAG_POST='DRAG_POST';\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST';\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS';\n\nexport class AddPost implements Action\n{\nreadonly type=ADD_POST;\nconstructor(public payload){}\n}\n\nexport class DeletePost implements Action\n{\n    constructor(public payload){}\n    readonly type=DELETE_POST;\n}\n\nexport class DragPost implements Action\n{\nreadonly type=DRAG_POST;\nconstructor(public payload){}\n}\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type KanbanActions=AddPost | DeletePost | DragPost | DragPostSuccess | SetCurrentPost | SetCurrentStatus;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticateUser.html":{"url":"classes/AuthenticateUser.html","title":"class - AuthenticateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticateUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/store/main.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/layout/store/main.actions.ts:11\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : AUTHENTICATE_USER\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n\nexport const AUTHENTICATE_USER='AUTHENTICATE_USER';\nexport const SIGN_OUT_USER='SIGN_OUT';\nexport const FORGOT_PASSWORD='FORGOT_PASSWORD';\nexport const USER_UPDATED='USER_UPDATED';\nexport const SET_TOKEN='SET_TOKEN';\n\nexport class AuthenticateUser implements Action\n{\n    readonly type=AUTHENTICATE_USER;\n    constructor(public payload){}\n}\n\nexport class SignOutUser implements Action\n{\n    readonly type=SIGN_OUT_USER;\n    constructor(public payload){}\n}\n\nexport class ForgotPassword implements Action\n{\n    readonly type=FORGOT_PASSWORD;\n    constructor(public payload){}\n}\n\nexport class UserUpdated implements Action\n{\n    readonly type=USER_UPDATED;\n    constructor(public payload){}\n}\n\nexport class SetToken implements Action\n{\n    readonly type=SET_TOKEN;\n    constructor(public payload){}\n}\n\n\nexport type MainActions = AuthenticateUser | SignOutUser | ForgotPassword\n| UserUpdated | SetToken\n;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePost.html":{"url":"classes/CreatePost.html","title":"class - CreatePost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePost\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:61\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:62\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : CREATE_POST\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:61\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostSuccess.html":{"url":"classes/CreatePostSuccess.html","title":"class - CreatePostSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:66\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:67\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : CREATE_POST_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:66\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTopic.html":{"url":"classes/CreateTopic.html","title":"class - CreateTopic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTopic\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:40\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:41\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : CREATE_TOPIC\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:40\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTopicSuccess.html":{"url":"classes/CreateTopicSuccess.html","title":"class - CreateTopicSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTopicSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:45\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:46\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : CREATE_TOPIC_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:45\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePost.html":{"url":"classes/DeletePost.html","title":"class - DeletePost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePost\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:76\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:77\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DELETE_POST\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:76\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePostSuccess.html":{"url":"classes/DeletePostSuccess.html","title":"class - DeletePostSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePostSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:71\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:72\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DELETE_POST_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:71\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragPost.html":{"url":"classes/DragPost.html","title":"class - DragPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragPost\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:80\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:81\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DRAG_POST\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:80\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragPostSuccess.html":{"url":"classes/DragPostSuccess.html","title":"class - DragPostSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragPostSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:87\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:88\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : DRAG_POST_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:87\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForgotPassword.html":{"url":"classes/ForgotPassword.html","title":"class - ForgotPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForgotPassword\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/store/main.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/layout/store/main.actions.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:24\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : FORGOT_PASSWORD\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:23\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n\nexport const AUTHENTICATE_USER='AUTHENTICATE_USER';\nexport const SIGN_OUT_USER='SIGN_OUT';\nexport const FORGOT_PASSWORD='FORGOT_PASSWORD';\nexport const USER_UPDATED='USER_UPDATED';\nexport const SET_TOKEN='SET_TOKEN';\n\nexport class AuthenticateUser implements Action\n{\n    readonly type=AUTHENTICATE_USER;\n    constructor(public payload){}\n}\n\nexport class SignOutUser implements Action\n{\n    readonly type=SIGN_OUT_USER;\n    constructor(public payload){}\n}\n\nexport class ForgotPassword implements Action\n{\n    readonly type=FORGOT_PASSWORD;\n    constructor(public payload){}\n}\n\nexport class UserUpdated implements Action\n{\n    readonly type=USER_UPDATED;\n    constructor(public payload){}\n}\n\nexport class SetToken implements Action\n{\n    readonly type=SET_TOKEN;\n    constructor(public payload){}\n}\n\n\nexport type MainActions = AuthenticateUser | SignOutUser | ForgotPassword\n| UserUpdated | SetToken\n;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPosts.html":{"url":"classes/GetPosts.html","title":"class - GetPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPosts\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : GET_POSTS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:24\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPostsError.html":{"url":"classes/GetPostsError.html","title":"class - GetPostsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPostsError\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:51\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:52\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : GET_POSTS_ERROR\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:51\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPostsSuccess.html":{"url":"classes/GetPostsSuccess.html","title":"class - GetPostsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPostsSuccess\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:30\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : GET_POSTS_SUCCESS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:29\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentPost.html":{"url":"classes/SetCurrentPost.html","title":"class - SetCurrentPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentPost\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:93\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:94\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SET_CURRENT_POST\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:93\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentStatus.html":{"url":"classes/SetCurrentStatus.html","title":"class - SetCurrentStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentStatus\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:99\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:100\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SET_CURRENT_STATUS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:99\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPosts.html":{"url":"classes/SetPosts.html","title":"class - SetPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPosts\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:57\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SET_POSTS\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:56\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStatuses.html":{"url":"classes/SetStatuses.html","title":"class - SetStatuses","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStatuses\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.actions.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:36\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SET_STATUSES\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/calendar/store/calendar.actions.ts:35\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nexport const ADD_POSTS_TO_STORE = 'ADD_POSTS_TO_STORE';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\n\nexport const CREATE_TOPIC='CREATE_TOPIC';\nexport const CREATE_TOPIC_SUCCESS='CREATE_TOPIC_SUCCESS';\n\nexport const DELETE_POST_SUCCESS='DELETE_POST_SUCCESS'\nexport const DELETE_POST='DELETE_POST'\n\nexport const DRAG_POST='DRAG_POST'\nexport const GET_POSTS='GET_POSTS'\nexport const GET_POSTS_SUCCESS='GET_SUCCESS'\nexport const GET_POSTS_ERROR='GET_POSTS_ERROR'\nexport const DRAG_POST_SUCCESS='DRAG_POST_SUCCESS';\nexport const SET_CURRENT_POST='SET_CURRENT_POST'\nexport const SET_CURRENT_STATUS='SET_CURRENT_STATUS'\nexport const SET_STATUSES='SET_STATUSES';\nexport const SET_POSTS='SET_POSTS';\n\nexport class GetPosts implements Action {\n    readonly type = GET_POSTS;\n    // constructor(public payload) { }\n}\n\nexport class GetPostsSuccess implements Action {\n    readonly type = GET_POSTS_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class SetStatuses implements Action {\n    readonly type = SET_STATUSES;\n    constructor(public payload) { }\n}\n\nexport class CreateTopic implements Action {\n    readonly type = CREATE_TOPIC;\n    constructor(public payload) { }\n}\n\nexport class CreateTopicSuccess implements Action {\n    readonly type = CREATE_TOPIC_SUCCESS;\n    constructor(public payload) { }\n}\n\n\nexport class GetPostsError implements Action {\n    readonly type = GET_POSTS_ERROR;\n    constructor(public payload) { }\n}\n\nexport class SetPosts implements Action {\n    readonly type = SET_POSTS;\n    constructor(public payload) { }\n}\n\nexport class CreatePost implements Action {\n    readonly type = CREATE_POST;\n    constructor(public payload) { }\n}\n\nexport class CreatePostSuccess implements Action {\n    readonly type = CREATE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePostSuccess implements Action {\n    readonly type = DELETE_POST_SUCCESS;\n    constructor(public payload) { }\n}\n\nexport class DeletePost implements Action {\n    readonly type = DELETE_POST;\n    constructor(public payload) { }\n}\nexport class DragPost implements Action {\n    readonly type = DRAG_POST;\n    constructor(public payload) { }\n}\n\n\nexport class DragPostSuccess implements Action\n{\nreadonly type=DRAG_POST_SUCCESS;\nconstructor(public payload){}\n}\n\nexport class SetCurrentPost implements Action\n{\nreadonly type=SET_CURRENT_POST;\nconstructor(public payload){}\n}\n\nexport class SetCurrentStatus implements Action\n{\nreadonly type=SET_CURRENT_STATUS;\nconstructor(public payload){}\n}\n\nexport type CalendarActions = GetPosts | GetPostsSuccess | \nGetPostsError | SetPosts | CreatePost | CreatePostSuccess | \nDeletePost | DragPost | CreateTopic | \nCreateTopicSuccess | SetCurrentPost | SetCurrentStatus | \nDragPost | SetStatuses\n | DragPostSuccess | DeletePostSuccess\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetToken.html":{"url":"classes/SetToken.html","title":"class - SetToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetToken\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/store/main.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/layout/store/main.actions.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:36\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SET_TOKEN\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:35\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n\nexport const AUTHENTICATE_USER='AUTHENTICATE_USER';\nexport const SIGN_OUT_USER='SIGN_OUT';\nexport const FORGOT_PASSWORD='FORGOT_PASSWORD';\nexport const USER_UPDATED='USER_UPDATED';\nexport const SET_TOKEN='SET_TOKEN';\n\nexport class AuthenticateUser implements Action\n{\n    readonly type=AUTHENTICATE_USER;\n    constructor(public payload){}\n}\n\nexport class SignOutUser implements Action\n{\n    readonly type=SIGN_OUT_USER;\n    constructor(public payload){}\n}\n\nexport class ForgotPassword implements Action\n{\n    readonly type=FORGOT_PASSWORD;\n    constructor(public payload){}\n}\n\nexport class UserUpdated implements Action\n{\n    readonly type=USER_UPDATED;\n    constructor(public payload){}\n}\n\nexport class SetToken implements Action\n{\n    readonly type=SET_TOKEN;\n    constructor(public payload){}\n}\n\n\nexport type MainActions = AuthenticateUser | SignOutUser | ForgotPassword\n| UserUpdated | SetToken\n;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignOutUser.html":{"url":"classes/SignOutUser.html","title":"class - SignOutUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignOutUser\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/store/main.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/layout/store/main.actions.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:18\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : SIGN_OUT_USER\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n\nexport const AUTHENTICATE_USER='AUTHENTICATE_USER';\nexport const SIGN_OUT_USER='SIGN_OUT';\nexport const FORGOT_PASSWORD='FORGOT_PASSWORD';\nexport const USER_UPDATED='USER_UPDATED';\nexport const SET_TOKEN='SET_TOKEN';\n\nexport class AuthenticateUser implements Action\n{\n    readonly type=AUTHENTICATE_USER;\n    constructor(public payload){}\n}\n\nexport class SignOutUser implements Action\n{\n    readonly type=SIGN_OUT_USER;\n    constructor(public payload){}\n}\n\nexport class ForgotPassword implements Action\n{\n    readonly type=FORGOT_PASSWORD;\n    constructor(public payload){}\n}\n\nexport class UserUpdated implements Action\n{\n    readonly type=USER_UPDATED;\n    constructor(public payload){}\n}\n\nexport class SetToken implements Action\n{\n    readonly type=SET_TOKEN;\n    constructor(public payload){}\n}\n\n\nexport type MainActions = AuthenticateUser | SignOutUser | ForgotPassword\n| UserUpdated | SetToken\n;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdated.html":{"url":"classes/UserUpdated.html","title":"class - UserUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdated\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/layout/store/main.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        payload\n                                    \n                                    \n                                            Readonly\n                                        type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(payload: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/layout/store/main.actions.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                payload\n                                                              \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        payload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    payload:     \n            \n                                \n                            \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:30\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : USER_UPDATED\n                                    \n                                \n                                    \n                                        \n                                                Defined in src/app/layout/store/main.actions.ts:29\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Action } from \"@ngrx/store\";\n\nexport const AUTHENTICATE_USER='AUTHENTICATE_USER';\nexport const SIGN_OUT_USER='SIGN_OUT';\nexport const FORGOT_PASSWORD='FORGOT_PASSWORD';\nexport const USER_UPDATED='USER_UPDATED';\nexport const SET_TOKEN='SET_TOKEN';\n\nexport class AuthenticateUser implements Action\n{\n    readonly type=AUTHENTICATE_USER;\n    constructor(public payload){}\n}\n\nexport class SignOutUser implements Action\n{\n    readonly type=SIGN_OUT_USER;\n    constructor(public payload){}\n}\n\nexport class ForgotPassword implements Action\n{\n    readonly type=FORGOT_PASSWORD;\n    constructor(public payload){}\n}\n\nexport class UserUpdated implements Action\n{\n    readonly type=USER_UPDATED;\n    constructor(public payload){}\n}\n\nexport class SetToken implements Action\n{\n    readonly type=SET_TOKEN;\n    constructor(public payload){}\n}\n\n\nexport type MainActions = AuthenticateUser | SignOutUser | ForgotPassword\n| UserUpdated | SetToken\n;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/app.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        calendar\n                                \n                                \n                                        main\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        calendar\n                                    \n                                \n                                \n                                    \n                                        calendar:     CalendarReducer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CalendarReducer.State\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/store/app.reducers.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:     MainReducers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MainReducers.State\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/store/app.reducers.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import * as CalendarReducer from \"../calendar/store/calendar.reducer\";\nimport { ActionReducerMap } from \"@ngrx/store\";\nimport * as MainReducers from \"../layout/store/main.reducers\";\n\nexport interface AppState{\n    calendar:CalendarReducer.State,\n    main:MainReducers.State\n}\n\nexport var AppReducers:ActionReducerMap={\ncalendar:CalendarReducer.CalendarReducer,\nmain:MainReducers.MainReducers\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/calendar/store/calendar.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attachments\n                                \n                                \n                                        currentPost\n                                \n                                \n                                        currentStatus\n                                \n                                \n                                        posts\n                                \n                                \n                                        statuses\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                    \n                                \n                                \n                                    \n                                        attachments:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.reducer.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentPost\n                                    \n                                \n                                \n                                    \n                                        currentPost:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.reducer.ts:13\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentStatus\n                                    \n                                \n                                \n                                    \n                                        currentStatus:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.reducer.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posts\n                                    \n                                \n                                \n                                    \n                                        posts:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.reducer.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statuses\n                                    \n                                \n                                \n                                    \n                                        statuses:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/calendar/store/calendar.reducer.ts:14\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap } from '@ngrx/store';\nimport * as CalendarActions from './calendar.actions';\n\n// export interface FeatureState\n// {\n//     calendar:State\n// }\n\nexport interface State {\n    posts: any[];\n    attachments: any[],\n    currentStatus:any,\n    currentPost:any,\n    statuses:any[]\n}\n\nexport var initialState: State = {\n    posts: [],\n    attachments: [],\n    currentStatus:null,\n    currentPost:null,\n    statuses:[]\n}\n\nexport const reducer:ActionReducerMap={\n    calendar:CalendarReducer\n}\n\nexport function CalendarReducer(state = initialState, action: CalendarActions.CalendarActions) {\n\n    switch (action.type) {\n        case CalendarActions.CREATE_POST_SUCCESS:\n        var statuses=[...state.statuses];\n        var post=action.payload;\n        statuses.forEach(o=>{\n          if(o.id===post.status)\n          {\n              o.data.push(post)\n          }\n      })\n        return { ...state, posts: [...state.posts, post],statuses:statuses };\n\n        case CalendarActions.GET_POSTS_SUCCESS:\n            return { ...state, posts:action.payload};\n\n        case CalendarActions.SET_POSTS:\n            return { ...state, posts: [...action.payload] };\n\n        case CalendarActions.DELETE_POST_SUCCESS:\n            const id = action.payload\n            var posts = [...state.posts];\n            var statuses=[...state.statuses];\n\n            posts.forEach((p,i)=>{\n                if(p.id===id)\n                {\n                    posts.splice(i,1)\n                }\n            })\n\n            statuses.forEach((s)=>{\n              s.data.forEach((p,i)=>{\n                  if(p.id===id)\n                  {\n                      s.data.splice(i,1)\n                  }\n              })\n            })\n            return { ...state, posts: posts ,statuses:statuses};\n\n        case CalendarActions.SET_STATUSES:\n        return {\n            ...state,statuses:action.payload\n        }\n\n        case CalendarActions.DRAG_POST_SUCCESS:\n            var post = action.payload;\n            var statuses=state.statuses.slice();\n            var index;\n            statuses.forEach((o,i)=>{\n                o.data.forEach(d=>{\n                    if(d.id===post.id)\n                    {\n                        index=i;\n                    }     \n                })\n               \n            })\n\n            statuses[index]=post;\n        \n            return {\n                ...state,statuses:statuses\n            }\n        default:\n            return { ...state }\n    }\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalendarReducer\n                        \n                        \n                            KanbanReducers\n                        \n                        \n                            MainReducers\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/calendar/store/calendar.reducer.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                CalendarReducer\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    CalendarReducer(state: , action: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        state\n                                                        \n                                                            \n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                                    \n                                                        action\n                                                        \n                                                            \n                                                                        typeReference\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/app/kanban/store/kanban-reducer.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                KanbanReducers\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    KanbanReducers(state: , action: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        state\n                                                        \n                                                            \n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                                    \n                                                        action\n                                                        \n                                                            \n                                                                        typeReference\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/app/layout/store/main.reducers.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MainReducers\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    MainReducers(state: , action: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        state\n                                                        \n                                                            \n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                                    \n                                                        action\n                                                        \n                                                            \n                                                                        typeReference\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CalendarActions\n                        \n                        \n                            KanbanActions\n                        \n                        \n                            MainActions\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/calendar/store/calendar.actions.ts\n    \n            \n                \n                    \n                        \n                            \n                            CalendarActions\n                        \n                    \n                    \n                        \n                            CalendarActions:     GetPosts | GetPostsSuccess | GetPostsError | SetPosts | CreatePost | CreatePostSuccess | DeletePost | DragPost | CreateTopic | CreateTopicSuccess | SetCurrentPost | SetCurrentStatus | DragPost | SetStatuses | DragPostSuccess | DeletePostSuccess\n    \n                        \n                    \n                \n            \n    \n    src/app/kanban/store/kanban-actions.ts\n    \n            \n                \n                    \n                        \n                            \n                            KanbanActions\n                        \n                    \n                    \n                        \n                            KanbanActions:     AddPost | DeletePost | DragPost | DragPostSuccess | SetCurrentPost | SetCurrentStatus\n    \n                        \n                    \n                \n            \n    \n    src/app/layout/store/main.actions.ts\n    \n            \n                \n                    \n                        \n                            \n                            MainActions\n                        \n                    \n                    \n                        \n                            MainActions:     AuthenticateUser | SignOutUser | ForgotPassword | UserUpdated | SetToken\n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
